name: Escalation Tests

on:
  push:
    branches: [main, develop, new-escalation]
    paths:
      - 'lib/bot-engine/escalation/**'
      - 'tests/**/*escalation*'
      - 'tests/integration/**'
      - 'tests/unit/**'
      - 'tests/flow/**'
      - '.github/workflows/escalation-tests.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'lib/bot-engine/escalation/**'
      - 'tests/**/*escalation*'
      - 'tests/integration/**'
      - 'tests/unit/**'
      - 'tests/flow/**'
      - '.github/workflows/escalation-tests.yml'
  workflow_dispatch:
    inputs:
      test_scope:
        description: 'Test scope to run'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - unit
          - integration
          - flow
      verbose:
        description: 'Verbose output'
        required: false
        default: false
        type: boolean

jobs:
  escalation-tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Setup environment variables
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        WHATSAPP_ACCESS_TOKEN: ${{ secrets.WHATSAPP_ACCESS_TOKEN }}
        WHATSAPP_PHONE_NUMBER_ID: ${{ secrets.WHATSAPP_PHONE_NUMBER_ID }}
        WHATSAPP_VERIFY_TOKEN: ${{ secrets.WHATSAPP_VERIFY_TOKEN }}
        STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
        STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
        GOOGLE_MAPS_API_KEY: ${{ secrets.GOOGLE_MAPS_API_KEY }}
        RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        NODE_ENV: test
      run: |
        echo "Environment variables configured for escalation tests"
        echo "Test database: ${{ secrets.SUPABASE_URL }}"
        
    - name: Validate test environment
      run: |
        echo "🔍 Validating escalation test environment..."
        npm run build --if-present
        npx tsx tests/utilities/validate-test-setup.ts || echo "⚠️ Test setup validation failed - will attempt to seed data"
        
    - name: Seed test data (if needed)
      run: |
        echo "🌱 Seeding test data for escalation tests..."
        npx tsx scripts/seed-luisa-business.ts || echo "⚠️ Seeding failed - tests will use existing data"
        
    - name: Run Unit Tests (44 tests)
      if: ${{ github.event.inputs.test_scope == 'unit' || github.event.inputs.test_scope == 'all' || github.event.inputs.test_scope == '' }}
      run: |
        echo "🧪 Running Escalation Unit Tests..."
        npm test -- tests/unit/escalation/escalation-detector.test.ts --verbose=${{ github.event.inputs.verbose || 'false' }}
        
    - name: Run Integration Tests (8 tests)
      if: ${{ github.event.inputs.test_scope == 'integration' || github.event.inputs.test_scope == 'all' || github.event.inputs.test_scope == '' }}
      run: |
        echo "🔗 Running Escalation Integration Tests..."
        npm test -- tests/integration/escalation/escalation-flow.test.ts --verbose=${{ github.event.inputs.verbose || 'false' }}
        npm test -- tests/integration/escalation-integration.test.ts --verbose=${{ github.event.inputs.verbose || 'false' }}
        
    - name: Run Flow Tests (12 tests)
      if: ${{ github.event.inputs.test_scope == 'flow' || github.event.inputs.test_scope == 'all' || github.event.inputs.test_scope == '' }}
      run: |
        echo "🎬 Running Escalation Flow Tests..."
        npm test -- tests/flow/escalation-scenarios/complete-escalation-scenarios.test.ts --verbose=${{ github.event.inputs.verbose || 'false' }}
        
         - name: Run Template Tests
       if: ${{ github.event.inputs.test_scope == 'all' || github.event.inputs.test_scope == '' }}
       run: |
         echo "📧 Running WhatsApp Template Tests..."
         npm test -- tests/unit/whatsapp-template.test.ts --verbose=${{ github.event.inputs.verbose || 'false' }}
         echo "🧹 Running WhatsApp Template Parameter Cleaning Tests..."
         npm test -- tests/unit/whatsapp-template-parameter-cleaning.test.ts --verbose=${{ github.event.inputs.verbose || 'false' }}
        
    - name: Run User Role Filtering Tests
      if: ${{ github.event.inputs.test_scope == 'all' || github.event.inputs.test_scope == '' }}
      run: |
        echo "👤 Running User Role Filtering Tests..."
        npm test -- tests/unit/user-role-filtering.test.ts --verbose=${{ github.event.inputs.verbose || 'false' }}
        
    - name: Test Summary
      if: always()
      run: |
        echo "📊 ESCALATION TEST SUMMARY"
        echo "========================="
        echo "✅ Unit Tests: Individual escalation detection functions"
        echo "✅ Integration Tests: Complete escalation flow validation"
        echo "✅ Flow Tests: Real-world escalation scenarios"
        echo "✅ Template Tests: WhatsApp template validation"
        echo "✅ User Role Tests: Customer user lookup validation"
        echo ""
        echo "🎯 TOTAL COVERAGE: 64+ escalation tests"
        echo "📱 WhatsApp Bot: Escalation system validated"
        echo "🏢 Business: Luisa Business (Beauty Asiul)"
        echo "🌍 Languages: English & Spanish"
        echo "🚨 Triggers: Media, Human Request, Frustration"
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: escalation-test-results-node-${{ matrix.node-version }}
        path: |
          coverage/
          test-results/
          *.log
        retention-days: 30
        
    - name: Notify on failure
      if: failure()
      run: |
        echo "❌ ESCALATION TESTS FAILED"
        echo "The escalation system may have issues. Please check:"
        echo "1. Database connectivity"
        echo "2. Test data seeding"
        echo "3. Environment variables"
        echo "4. WhatsApp template configuration"
        echo "5. User role filtering logic"
        echo ""
        echo "Run locally with: npm test -- tests/unit/escalation/ tests/integration/escalation/ tests/flow/escalation-scenarios/"
        
  test-summary:
    runs-on: ubuntu-latest
    needs: escalation-tests
    if: always()
    
    steps:
    - name: Test Results Summary
      run: |
        echo "🎯 ESCALATION TESTS COMPLETE"
        echo "=========================="
        echo "Node.js 18.x: ${{ needs.escalation-tests.outputs.node-18-status || 'Unknown' }}"
        echo "Node.js 20.x: ${{ needs.escalation-tests.outputs.node-20-status || 'Unknown' }}"
        echo ""
        echo "📋 Test Categories:"
        echo "• Unit Tests (44): Individual function validation"
        echo "• Integration Tests (8): Component interaction"
        echo "• Flow Tests (12): End-to-end scenarios"
        echo "• Template Tests: WhatsApp template validation"
        echo "• User Role Tests: Customer lookup validation"
        echo ""
        echo "🌟 System Validated:"
        echo "✅ Media content escalation (images/videos/documents)"
        echo "✅ Human request escalation (English/Spanish)"
        echo "✅ Frustration pattern detection (AI-powered)"
        echo "✅ Proxy communication (admin ↔ customer)"
                 echo "✅ Template parameter structure"
         echo "✅ Template parameter cleaning (newlines/tabs/spaces)"
         echo "✅ Smart parameter fallback (auto-truncation + follow-up)"
         echo "✅ User role filtering (customer vs admin)"
        echo "✅ Language support (bilingual responses)"
        echo "✅ Priority handling (media > human > frustration)"
        echo ""
        echo "🚀 Ready for production deployment!"
