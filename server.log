
> simple-booking@0.1.0 dev
> next dev

   ▲ Next.js 15.3.2
   - Local:        http://localhost:3000
   - Network:      http://192.168.0.148:3000
   - Environments: .env.local

 ✓ Starting...
 ✓ Ready in 1496ms
 ○ Compiling /api/onboarding/create-business ...
 ✓ Compiled /api/onboarding/create-business in 823ms (894 modules)
[Environment] Using development environment for service-role client
(node:77770) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.
(Use `node --trace-deprecation ...` to show where the warning was created)
[Onboarding] Creating business with 1 providers, owner role: admin/provider
[Onboarding] Creating owner auth user...
[Onboarding] Owner auth user created with ID: 5bedc020-89f5-4fe4-ac1d-0956c5674630
[Onboarding] Creating business...
[Onboarding] Business created with ID: ff396342-7669-4ca5-9e73-db7be188f417
[Onboarding] Creating owner user profile with role: admin/provider
[User.add] Found existing auth user with email: test-onboarding@example.com
[User.add] About to upsert user profile: {
  id: '5bedc020-89f5-4fe4-ac1d-0956c5674630',
  firstName: 'John',
  lastName: 'Doe',
  role: 'admin/provider',
  businessId: 'ff396342-7669-4ca5-9e73-db7be188f417',
  email: 'test-onboarding@example.com',
  phoneNormalized: '61400000001',
  whatsAppNumberNormalized: '61400000002'
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Owner user profile created with ID: 5bedc020-89f5-4fe4-ac1d-0956c5674630
[Onboarding] Successfully created 1 total providers
[Onboarding] Creating default services...
[Onboarding] Created service: Single item move - One person
[Onboarding] Created service: Single item move - Two people
[Onboarding] Created service: Few items move - One person
[Onboarding] Created service: Few items move - Two people
[Onboarding] Created service: House Move 1 bedroom - One person
[Onboarding] Created service: House Move 1 bedroom - Two people
[Onboarding] Created service: House Move 2+ bedroom - One person
[Onboarding] Created service: House Move 2+ bedroom - Two people
[Onboarding] Creating provider calendar settings...
[Onboarding] Creating calendar settings for provider 0: John Doe (admin/provider)
[Onboarding] Provider 0 qualifies for calendar settings, proceeding...
[Onboarding] Calling CalendarSettings.save with data: {
  providerId: '5bedc020-89f5-4fe4-ac1d-0956c5674630',
  businessId: 'ff396342-7669-4ca5-9e73-db7be188f417',
  workingHours: {
    mon: { start: '09:00', end: '17:00' },
    tue: { start: '09:00', end: '17:00' },
    wed: { start: '09:00', end: '17:00' },
    thu: { start: '09:00', end: '17:00' },
    fri: { start: '09:00', end: '17:00' },
    sat: null,
    sun: null
  },
  timezone: 'Australia/Sydney',
  manageCalendar: false
}
[CalendarSettings.save] Using service role client (bypasses RLS for calendar settings creation)
Failed to save calendar settings {
  message: "Could not find the 'providerId' column of 'calendarSettings' in the schema cache",
  details: null,
  code: 'PGRST204',
  hint: null
}
[Onboarding] Error creating calendar settings: Error [ModelError]: Failed to save calendar settings
    at handleModelError (lib/general-helpers/error.ts:16:8)
    at CalendarSettings.save (lib/database/models/calendar-settings.ts:86:23)
    at async POST (app/api/onboarding/create-business/route.ts:317:25)
  14 |   } : {};
  15 |   console.error(message, errorDetails);
> 16 |   throw new ModelError(message, error);
     |        ^
  17 | }  {
  originalError: [Object]
}
[Onboarding] Calendar settings error details: {
  error: 'Failed to save calendar settings',
  stack: 'ModelError: Failed to save calendar settings\n' +
    '    at handleModelError (webpack-internal:///(rsc)/./lib/general-helpers/error.ts:20:11)\n' +
    '    at CalendarSettings.save (webpack-internal:///(rsc)/./lib/database/models/calendar-settings.ts:39:89)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async POST (webpack-internal:///(rsc)/./app/api/onboarding/create-business/route.ts:303:36)\n' +
    '    at async AppRouteRouteModule.do (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:34112)\n' +
    '    at async AppRouteRouteModule.handle (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:41338)\n' +
    '    at async doRender (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/base-server.js:1513:42)\n' +
    '    at async DevServer.renderToResponseWithComponentsImpl (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/base-server.js:1915:28)\n' +
    '    at async DevServer.renderPageComponent (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/base-server.js:2403:24)\n' +
    '    at async DevServer.renderToResponseImpl (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/base-server.js:2440:32)\n' +
    '    at async DevServer.pipeImpl (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/base-server.js:1007:25)\n' +
    '    at async NextNodeServer.handleCatchallRenderRequest (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/next-server.js:305:17)\n' +
    '    at async DevServer.handleRequestImpl (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/base-server.js:899:17)\n' +
    '    at async /Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/dev/next-dev-server.js:371:20\n' +
    '    at async Span.traceAsyncFn (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/trace/trace.js:157:20)\n' +
    '    at async DevServer.handleRequest (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/dev/next-dev-server.js:368:24)\n' +
    '    at async invokeRender (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/lib/router-server.js:237:21)\n' +
    '    at async handleRequest (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/lib/router-server.js:428:24)\n' +
    '    at async requestHandlerImpl (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/lib/router-server.js:452:13)\n' +
    '    at async Server.requestListener (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/lib/start-server.js:158:13)',
  providers: 1,
  businessId: 'ff396342-7669-4ca5-9e73-db7be188f417'
}
[Onboarding] Generating initial aggregated availability...
ProviderCalendarSettings.getByBusiness {
  message: 'relation "public.provider_calendar_settings" does not exist',
  details: null,
  code: '42P01',
  hint: null
}
[Onboarding] Error generating initial availability: Error [ModelError]: ProviderCalendarSettings.getByBusiness
    at handleModelError (lib/general-helpers/error.ts:16:8)
    at ProviderCalendarSettings.getByBusiness (lib/database/models/provider-calendar-settings.ts:126:29)
    at async computeAggregatedAvailability (lib/general-helpers/availability.ts:78:27)
    at async POST (app/api/onboarding/create-business/route.ts:355:32)
  14 |   } : {};
  15 |   console.error(message, errorDetails);
> 16 |   throw new ModelError(message, error);
     |        ^
  17 | }  {
  originalError: [Object]
}
[Onboarding] Multi-provider business onboarding completed successfully!
 POST /api/onboarding/create-business 200 in 2000ms
 ✓ Compiled in 317ms (540 modules)
 ✓ Compiled in 86ms (540 modules)
 ✓ Compiled in 27ms
 ✓ Compiled /api/onboarding/create-business in 187ms (540 modules)
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 1 providers, owner role: admin/provider
[Onboarding] Creating owner auth user...
[Onboarding] Owner auth user created with ID: a33dbd8a-d61c-4b66-bd18-28b1533c606e
[Onboarding] Creating business...
[Onboarding] Business created with ID: 48eb9fca-b2cf-47d0-907a-eb39a3bdf7df
[Onboarding] Creating owner user profile with role: admin/provider
[User.add] Found existing auth user with email: test-onboarding@example.com
[User.add] About to upsert user profile: {
  id: 'a33dbd8a-d61c-4b66-bd18-28b1533c606e',
  firstName: 'John',
  lastName: 'Doe',
  role: 'admin/provider',
  businessId: '48eb9fca-b2cf-47d0-907a-eb39a3bdf7df',
  email: 'test-onboarding@example.com',
  phoneNormalized: '61400000001',
  whatsAppNumberNormalized: '61400000002'
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Owner user profile created with ID: a33dbd8a-d61c-4b66-bd18-28b1533c606e
[Onboarding] Successfully created 1 total providers
[Onboarding] Creating default services...
[Onboarding] Created service: Single item move - One person
[Onboarding] Created service: Single item move - Two people
[Onboarding] Created service: Few items move - One person
[Onboarding] Created service: Few items move - Two people
[Onboarding] Created service: House Move 1 bedroom - One person
[Onboarding] Created service: House Move 1 bedroom - Two people
[Onboarding] Created service: House Move 2+ bedroom - One person
[Onboarding] Created service: House Move 2+ bedroom - Two people
[Onboarding] Creating provider calendar settings...
[Onboarding] Creating calendar settings for provider 0: John Doe (admin/provider)
[Onboarding] Provider 0 qualifies for calendar settings, proceeding...
[Onboarding] Calling CalendarSettings.save with data: {
  userId: 'a33dbd8a-d61c-4b66-bd18-28b1533c606e',
  businessId: '48eb9fca-b2cf-47d0-907a-eb39a3bdf7df',
  workingHours: {
    mon: { start: '09:00', end: '17:00' },
    tue: { start: '09:00', end: '17:00' },
    wed: { start: '09:00', end: '17:00' },
    thu: { start: '09:00', end: '17:00' },
    fri: { start: '09:00', end: '17:00' },
    sat: null,
    sun: null
  },
  timezone: 'Australia/Sydney',
  manageCalendar: false
}
[CalendarSettings.save] Using service role client (bypasses RLS for calendar settings creation)
Failed to save calendar settings {
  message: "Could not find the 'timezone' column of 'calendarSettings' in the schema cache",
  details: null,
  code: 'PGRST204',
  hint: null
}
[Onboarding] Error creating calendar settings: Error [ModelError]: Failed to save calendar settings
    at handleModelError (lib/general-helpers/error.ts:16:8)
    at CalendarSettings.save (lib/database/models/calendar-settings.ts:79:23)
    at async POST (app/api/onboarding/create-business/route.ts:317:25)
  14 |   } : {};
  15 |   console.error(message, errorDetails);
> 16 |   throw new ModelError(message, error);
     |        ^
  17 | }  {
  originalError: [Object]
}
[Onboarding] Calendar settings error details: {
  error: 'Failed to save calendar settings',
  stack: 'ModelError: Failed to save calendar settings\n' +
    '    at handleModelError (webpack-internal:///(rsc)/./lib/general-helpers/error.ts:20:11)\n' +
    '    at CalendarSettings.save (webpack-internal:///(rsc)/./lib/database/models/calendar-settings.ts:34:89)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async POST (webpack-internal:///(rsc)/./app/api/onboarding/create-business/route.ts:303:36)\n' +
    '    at async AppRouteRouteModule.do (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:34112)\n' +
    '    at async AppRouteRouteModule.handle (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:41338)\n' +
    '    at async doRender (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/base-server.js:1513:42)\n' +
    '    at async DevServer.renderToResponseWithComponentsImpl (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/base-server.js:1915:28)\n' +
    '    at async DevServer.renderPageComponent (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/base-server.js:2403:24)\n' +
    '    at async DevServer.renderToResponseImpl (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/base-server.js:2440:32)\n' +
    '    at async DevServer.pipeImpl (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/base-server.js:1007:25)\n' +
    '    at async NextNodeServer.handleCatchallRenderRequest (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/next-server.js:305:17)\n' +
    '    at async DevServer.handleRequestImpl (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/base-server.js:899:17)\n' +
    '    at async /Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/dev/next-dev-server.js:371:20\n' +
    '    at async Span.traceAsyncFn (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/trace/trace.js:157:20)\n' +
    '    at async DevServer.handleRequest (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/dev/next-dev-server.js:368:24)\n' +
    '    at async invokeRender (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/lib/router-server.js:237:21)\n' +
    '    at async handleRequest (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/lib/router-server.js:428:24)\n' +
    '    at async requestHandlerImpl (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/lib/router-server.js:452:13)\n' +
    '    at async Server.requestListener (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/lib/start-server.js:158:13)',
  providers: 1,
  businessId: '48eb9fca-b2cf-47d0-907a-eb39a3bdf7df'
}
[Onboarding] Generating initial aggregated availability...
ProviderCalendarSettings.getByBusiness {
  message: 'relation "public.provider_calendar_settings" does not exist',
  details: null,
  code: '42P01',
  hint: null
}
[Onboarding] Error generating initial availability: Error [ModelError]: ProviderCalendarSettings.getByBusiness
    at handleModelError (lib/general-helpers/error.ts:16:8)
    at ProviderCalendarSettings.getByBusiness (lib/database/models/provider-calendar-settings.ts:126:29)
    at async computeAggregatedAvailability (lib/general-helpers/availability.ts:78:27)
    at async POST (app/api/onboarding/create-business/route.ts:355:32)
  14 |   } : {};
  15 |   console.error(message, errorDetails);
> 16 |   throw new ModelError(message, error);
     |        ^
  17 | }  {
  originalError: [Object]
}
[Onboarding] Multi-provider business onboarding completed successfully!
 POST /api/onboarding/create-business 200 in 1485ms
 ✓ Compiled in 157ms (540 modules)
 ✓ Compiled in 219ms (540 modules)
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 1 providers, owner role: admin/provider
[Onboarding] Creating owner auth user...
[Onboarding] Owner auth user created with ID: 5a06b758-bb4c-4ad7-9385-c7c03fecae08
[Onboarding] Creating business...
[Onboarding] Business created with ID: 3680d4ef-b13d-4d16-a6b0-090b8768adb2
[Onboarding] Creating owner user profile with role: admin/provider
[User.add] Found existing auth user with email: test-onboarding@example.com
[User.add] About to upsert user profile: {
  id: '5a06b758-bb4c-4ad7-9385-c7c03fecae08',
  firstName: 'John',
  lastName: 'Doe',
  role: 'admin/provider',
  businessId: '3680d4ef-b13d-4d16-a6b0-090b8768adb2',
  email: 'test-onboarding@example.com',
  phoneNormalized: '61400000001',
  whatsAppNumberNormalized: '61400000002'
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Owner user profile created with ID: 5a06b758-bb4c-4ad7-9385-c7c03fecae08
[Onboarding] Successfully created 1 total providers
[Onboarding] Creating default services...
[Onboarding] Created service: Single item move - One person
[Onboarding] Created service: Single item move - Two people
[Onboarding] Created service: Few items move - One person
[Onboarding] Created service: Few items move - Two people
[Onboarding] Created service: House Move 1 bedroom - One person
[Onboarding] Created service: House Move 1 bedroom - Two people
[Onboarding] Created service: House Move 2+ bedroom - One person
[Onboarding] Created service: House Move 2+ bedroom - Two people
[Onboarding] Creating provider calendar settings...
[Onboarding] Creating calendar settings for provider 0: John Doe (admin/provider)
[Onboarding] Provider 0 qualifies for calendar settings, proceeding...
[Onboarding] Calling CalendarSettings.save with data: {
  userId: '5a06b758-bb4c-4ad7-9385-c7c03fecae08',
  businessId: '3680d4ef-b13d-4d16-a6b0-090b8768adb2',
  workingHours: {
    mon: { start: '09:00', end: '17:00' },
    tue: { start: '09:00', end: '17:00' },
    wed: { start: '09:00', end: '17:00' },
    thu: { start: '09:00', end: '17:00' },
    fri: { start: '09:00', end: '17:00' },
    sat: null,
    sun: null
  },
  manageCalendar: false
}
[CalendarSettings.save] Using service role client (bypasses RLS for calendar settings creation)
Failed to save calendar settings {
  message: 'null value in column "settings" of relation "calendarSettings" violates not-null constraint',
  details: 'Failing row contains (521f0837-fea4-4c30-8759-61f089ba5242, 2025-07-23 03:57:05.733335+00, 2025-07-23 03:57:05.703+00, 5a06b758-bb4c-4ad7-9385-c7c03fecae08, 3680d4ef-b13d-4d16-a6b0-090b8768adb2, null, null, null, {"fri": {"end": "17:00", "start": "09:00"}, "mon": {"end": "17:0...).',
  code: '23502',
  hint: null
}
[Onboarding] Error creating calendar settings: Error [ModelError]: Failed to save calendar settings
    at handleModelError (lib/general-helpers/error.ts:16:8)
    at CalendarSettings.save (lib/database/models/calendar-settings.ts:78:23)
    at async POST (app/api/onboarding/create-business/route.ts:316:25)
  14 |   } : {};
  15 |   console.error(message, errorDetails);
> 16 |   throw new ModelError(message, error);
     |        ^
  17 | }  {
  originalError: [Object]
}
[Onboarding] Calendar settings error details: {
  error: 'Failed to save calendar settings',
  stack: 'ModelError: Failed to save calendar settings\n' +
    '    at handleModelError (webpack-internal:///(rsc)/./lib/general-helpers/error.ts:20:11)\n' +
    '    at CalendarSettings.save (webpack-internal:///(rsc)/./lib/database/models/calendar-settings.ts:33:89)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async POST (webpack-internal:///(rsc)/./app/api/onboarding/create-business/route.ts:302:36)\n' +
    '    at async AppRouteRouteModule.do (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:34112)\n' +
    '    at async AppRouteRouteModule.handle (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:41338)\n' +
    '    at async doRender (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/base-server.js:1513:42)\n' +
    '    at async DevServer.renderToResponseWithComponentsImpl (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/base-server.js:1915:28)\n' +
    '    at async DevServer.renderPageComponent (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/base-server.js:2403:24)\n' +
    '    at async DevServer.renderToResponseImpl (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/base-server.js:2440:32)\n' +
    '    at async DevServer.pipeImpl (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/base-server.js:1007:25)\n' +
    '    at async NextNodeServer.handleCatchallRenderRequest (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/next-server.js:305:17)\n' +
    '    at async DevServer.handleRequestImpl (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/base-server.js:899:17)\n' +
    '    at async /Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/dev/next-dev-server.js:371:20\n' +
    '    at async Span.traceAsyncFn (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/trace/trace.js:157:20)\n' +
    '    at async DevServer.handleRequest (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/dev/next-dev-server.js:368:24)\n' +
    '    at async invokeRender (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/lib/router-server.js:237:21)\n' +
    '    at async handleRequest (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/lib/router-server.js:428:24)\n' +
    '    at async requestHandlerImpl (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/lib/router-server.js:452:13)\n' +
    '    at async Server.requestListener (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/lib/start-server.js:158:13)',
  providers: 1,
  businessId: '3680d4ef-b13d-4d16-a6b0-090b8768adb2'
}
[Onboarding] Generating initial aggregated availability...
ProviderCalendarSettings.getByBusiness {
  message: 'relation "public.provider_calendar_settings" does not exist',
  details: null,
  code: '42P01',
  hint: null
}
[Onboarding] Error generating initial availability: Error [ModelError]: ProviderCalendarSettings.getByBusiness
    at handleModelError (lib/general-helpers/error.ts:16:8)
    at ProviderCalendarSettings.getByBusiness (lib/database/models/provider-calendar-settings.ts:126:29)
    at async computeAggregatedAvailability (lib/general-helpers/availability.ts:78:27)
    at async POST (app/api/onboarding/create-business/route.ts:354:32)
  14 |   } : {};
  15 |   console.error(message, errorDetails);
> 16 |   throw new ModelError(message, error);
     |        ^
  17 | }  {
  originalError: [Object]
}
[Onboarding] Multi-provider business onboarding completed successfully!
 POST /api/onboarding/create-business 200 in 1195ms
 ✓ Compiled in 27ms
 ⨯ ./lib/general-helpers/availability.ts
Module parse failed: Identifier 'CalendarSettings' has already been declared (4:9)
| import { Booking } from "../database/models/booking";
| import { AvailabilitySlots } from "../database/models/availability-slots";
> import { CalendarSettings } from "../database/models/calendar-settings";
| import { DateTime } from "luxon";
| import { Quote } from "../database/models/quote";

Import trace for requested module:
./lib/general-helpers/availability.ts
./app/api/onboarding/create-business/route.ts
 ○ Compiling /_not-found ...
 ⨯ ./lib/general-helpers/availability.ts
Module parse failed: Identifier 'CalendarSettings' has already been declared (4:9)
| import { Booking } from "../database/models/booking";
| import { AvailabilitySlots } from "../database/models/availability-slots";
> import { CalendarSettings } from "../database/models/calendar-settings";
| import { DateTime } from "luxon";
| import { Quote } from "../database/models/quote";

Import trace for requested module:
./lib/general-helpers/availability.ts
./app/api/onboarding/create-business/route.ts
 ✓ Compiled /_not-found in 343ms (855 modules)
 ○ Compiling /_error ...
 ⨯ ./lib/general-helpers/availability.ts
Module parse failed: Identifier 'CalendarSettings' has already been declared (4:9)
| import { Booking } from "../database/models/booking";
| import { AvailabilitySlots } from "../database/models/availability-slots";
> import { CalendarSettings } from "../database/models/calendar-settings";
| import { DateTime } from "luxon";
| import { Quote } from "../database/models/quote";

Import trace for requested module:
./lib/general-helpers/availability.ts
./app/api/onboarding/create-business/route.ts
 POST /api/onboarding/create-business 500 in 4878ms
 POST /api/onboarding/create-business 500 in 9ms
 POST /api/onboarding/create-business 500 in 219ms
 POST /api/onboarding/create-business 500 in 6ms
 POST /api/onboarding/create-business 500 in 7ms
 POST /api/onboarding/create-business 500 in 13ms
 ✓ Compiled /_error in 592ms (1418 modules)
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 1 providers, owner role: admin/provider
[Onboarding] Creating owner auth user...
[Onboarding] Owner auth user created with ID: c458f0c0-ff43-4ef8-823b-76cceec32452
[Onboarding] Creating business...
[Onboarding] Business created with ID: 0764a7a1-52f6-4910-8c0b-1b692fbf9783
[Onboarding] Creating owner user profile with role: admin/provider
[User.add] Found existing auth user with email: test-onboarding@example.com
[User.add] About to upsert user profile: {
  id: 'c458f0c0-ff43-4ef8-823b-76cceec32452',
  firstName: 'John',
  lastName: 'Doe',
  role: 'admin/provider',
  businessId: '0764a7a1-52f6-4910-8c0b-1b692fbf9783',
  email: 'test-onboarding@example.com',
  phoneNormalized: '61400000001',
  whatsAppNumberNormalized: '61400000002'
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Owner user profile created with ID: c458f0c0-ff43-4ef8-823b-76cceec32452
[Onboarding] Successfully created 1 total providers
[Onboarding] Creating default services...
[Onboarding] Created service: Single item move - One person
[Onboarding] Created service: Single item move - Two people
[Onboarding] Created service: Few items move - One person
[Onboarding] Created service: Few items move - Two people
[Onboarding] Created service: House Move 1 bedroom - One person
[Onboarding] Created service: House Move 1 bedroom - Two people
[Onboarding] Created service: House Move 2+ bedroom - One person
[Onboarding] Created service: House Move 2+ bedroom - Two people
[Onboarding] Creating provider calendar settings...
[Onboarding] Creating calendar settings for provider 0: John Doe (admin/provider)
[Onboarding] Provider 0 qualifies for calendar settings, proceeding...
[Onboarding] Calling CalendarSettings.save with data: {
  userId: 'c458f0c0-ff43-4ef8-823b-76cceec32452',
  businessId: '0764a7a1-52f6-4910-8c0b-1b692fbf9783',
  workingHours: {
    mon: { start: '09:00', end: '17:00' },
    tue: { start: '09:00', end: '17:00' },
    wed: { start: '09:00', end: '17:00' },
    thu: { start: '09:00', end: '17:00' },
    fri: { start: '09:00', end: '17:00' },
    sat: null,
    sun: null
  },
  manageCalendar: false
}
[CalendarSettings.save] Using service role client (bypasses RLS for calendar settings creation)
Failed to save calendar settings {
  message: 'null value in column "settings" of relation "calendarSettings" violates not-null constraint',
  details: 'Failing row contains (a2a00421-2e06-45c7-aa2c-d874902bee9f, 2025-07-23 04:33:43.791539+00, 2025-07-23 04:33:43.751+00, c458f0c0-ff43-4ef8-823b-76cceec32452, 0764a7a1-52f6-4910-8c0b-1b692fbf9783, null, null, null, {"fri": {"end": "17:00", "start": "09:00"}, "mon": {"end": "17:0...).',
  code: '23502',
  hint: null
}
[Onboarding] Error creating calendar settings: Error [ModelError]: Failed to save calendar settings
    at handleModelError (lib/general-helpers/error.ts:16:8)
    at CalendarSettings.save (lib/database/models/calendar-settings.ts:78:23)
    at async POST (app/api/onboarding/create-business/route.ts:317:25)
  14 |   } : {};
  15 |   console.error(message, errorDetails);
> 16 |   throw new ModelError(message, error);
     |        ^
  17 | }  {
  originalError: [Object]
}
[Onboarding] Calendar settings error details: {
  error: 'Failed to save calendar settings',
  stack: 'ModelError: Failed to save calendar settings\n' +
    '    at handleModelError (webpack-internal:///(rsc)/./lib/general-helpers/error.ts:20:11)\n' +
    '    at CalendarSettings.save (webpack-internal:///(rsc)/./lib/database/models/calendar-settings.ts:33:89)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async POST (webpack-internal:///(rsc)/./app/api/onboarding/create-business/route.ts:303:36)\n' +
    '    at async AppRouteRouteModule.do (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:34112)\n' +
    '    at async AppRouteRouteModule.handle (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:41338)\n' +
    '    at async doRender (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/base-server.js:1513:42)\n' +
    '    at async DevServer.renderToResponseWithComponentsImpl (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/base-server.js:1915:28)\n' +
    '    at async DevServer.renderPageComponent (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/base-server.js:2403:24)\n' +
    '    at async DevServer.renderToResponseImpl (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/base-server.js:2440:32)\n' +
    '    at async DevServer.pipeImpl (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/base-server.js:1007:25)\n' +
    '    at async NextNodeServer.handleCatchallRenderRequest (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/next-server.js:305:17)\n' +
    '    at async DevServer.handleRequestImpl (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/base-server.js:899:17)\n' +
    '    at async /Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/dev/next-dev-server.js:371:20\n' +
    '    at async Span.traceAsyncFn (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/trace/trace.js:157:20)\n' +
    '    at async DevServer.handleRequest (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/dev/next-dev-server.js:368:24)\n' +
    '    at async invokeRender (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/lib/router-server.js:237:21)\n' +
    '    at async handleRequest (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/lib/router-server.js:428:24)\n' +
    '    at async requestHandlerImpl (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/lib/router-server.js:452:13)\n' +
    '    at async Server.requestListener (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/lib/start-server.js:158:13)',
  providers: 1,
  businessId: '0764a7a1-52f6-4910-8c0b-1b692fbf9783'
}
[Onboarding] Generating initial aggregated availability...
[computeAggregatedAvailability] No providers found for business 0764a7a1-52f6-4910-8c0b-1b692fbf9783
[Onboarding] Generated 0 days of aggregated availability
[Onboarding] Successfully saved 0 availability slot records
[Onboarding] Multi-provider business onboarding completed successfully!
 POST /api/onboarding/create-business 200 in 1202ms
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 2 providers, owner role: admin
[Onboarding] Creating owner auth user...
[Onboarding] Owner auth user created with ID: f53b44a4-05eb-4035-a9fe-7f7d344f028b
[Onboarding] Creating business...
[Onboarding] Business created with ID: a93dd5a6-552e-48c1-9e9f-777fe9cef464
[Onboarding] Creating owner user profile with role: admin
[User.add] Found existing auth user with email: test-onboarding@example.com
[User.add] About to upsert user profile: {
  id: 'f53b44a4-05eb-4035-a9fe-7f7d344f028b',
  firstName: 'Jane',
  lastName: 'Smith',
  role: 'admin',
  businessId: 'a93dd5a6-552e-48c1-9e9f-777fe9cef464',
  email: 'test-onboarding@example.com',
  phoneNormalized: '61400000003',
  whatsAppNumberNormalized: '61400000004'
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Owner user profile created with ID: f53b44a4-05eb-4035-a9fe-7f7d344f028b
[Onboarding] Creating provider 2: Provider 2
[Onboarding] Failed to create auth user for provider 2: Error [AuthApiError]: A user with this email address has already been registered
    at async POST (app/api/onboarding/create-business/route.ts:167:69)
  165 |         
  166 |         // Create auth user for this provider
> 167 |         const { data: providerAuthData, error: providerAuthError } = await adminSupa.auth.admin.createUser({
      |                                                                     ^
  168 |           email: providerEmail,
  169 |           password: tempPassword,
  170 |           email_confirm: true, {
  __isAuthError: true,
  status: 422,
  code: 'email_exists'
}
[Onboarding] Error creating additional providers: Error: Failed to create provider 2 auth account
    at POST (app/api/onboarding/create-business/route.ts:183:16)
  181 |         if (providerAuthError || !providerAuthData.user) {
  182 |           console.error(`[Onboarding] Failed to create auth user for provider ${i + 1}:`, providerAuthError);
> 183 |           throw new Error(`Failed to create provider ${i + 1} auth account`);
      |                ^
  184 |         }
  185 |
  186 |         createdAuthUsers.push(providerAuthData.user.id);
[Environment] Using development environment for server client
 POST /api/onboarding/create-business 500 in 605ms
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 2 providers, owner role: admin/provider
[Onboarding] Creating owner auth user...
[Onboarding] Owner auth user created with ID: ac934ee8-3858-4ced-8e3b-03ce3f9f0d40
[Onboarding] Creating business...
[Onboarding] Business created with ID: dda3d8bf-aa14-43a7-9920-9433ff0503e0
[Onboarding] Creating owner user profile with role: admin/provider
[User.add] Found existing auth user with email: test-onboarding@example.com
[User.add] About to upsert user profile: {
  id: 'ac934ee8-3858-4ced-8e3b-03ce3f9f0d40',
  firstName: 'Mike',
  lastName: 'Wilson',
  role: 'admin/provider',
  businessId: 'dda3d8bf-aa14-43a7-9920-9433ff0503e0',
  email: 'test-onboarding@example.com',
  phoneNormalized: '61400000005',
  whatsAppNumberNormalized: '61400000006'
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Owner user profile created with ID: ac934ee8-3858-4ced-8e3b-03ce3f9f0d40
[Onboarding] Creating provider 2: Provider 2
[Onboarding] Failed to create auth user for provider 2: Error [AuthApiError]: A user with this email address has already been registered
    at async POST (app/api/onboarding/create-business/route.ts:167:69)
  165 |         
  166 |         // Create auth user for this provider
> 167 |         const { data: providerAuthData, error: providerAuthError } = await adminSupa.auth.admin.createUser({
      |                                                                     ^
  168 |           email: providerEmail,
  169 |           password: tempPassword,
  170 |           email_confirm: true, {
  __isAuthError: true,
  status: 422,
  code: 'email_exists'
}
[Onboarding] Error creating additional providers: Error: Failed to create provider 2 auth account
    at POST (app/api/onboarding/create-business/route.ts:183:16)
  181 |         if (providerAuthError || !providerAuthData.user) {
  182 |           console.error(`[Onboarding] Failed to create auth user for provider ${i + 1}:`, providerAuthError);
> 183 |           throw new Error(`Failed to create provider ${i + 1} auth account`);
      |                ^
  184 |         }
  185 |
  186 |         createdAuthUsers.push(providerAuthData.user.id);
[Environment] Using development environment for server client
 POST /api/onboarding/create-business 500 in 620ms
[Environment] Using development environment for service-role client
 POST /api/onboarding/create-business 400 in 11ms
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 1 providers, owner role: admin/provider
[Onboarding] Creating owner auth user...
[Onboarding] Owner auth user created with ID: 044cd9f9-2366-46e9-97aa-71ca57b1c553
[Onboarding] Creating business...
[Onboarding] Business created with ID: 74f462ae-e424-4d64-b659-f91123470800
[Onboarding] Creating owner user profile with role: admin/provider
[User.add] Found existing auth user with email: test-onboarding@example.com
[User.add] About to upsert user profile: {
  id: '044cd9f9-2366-46e9-97aa-71ca57b1c553',
  firstName: 'John',
  lastName: 'Doe',
  role: 'admin/provider',
  businessId: '74f462ae-e424-4d64-b659-f91123470800',
  email: 'test-onboarding@example.com',
  phoneNormalized: '61400000005',
  whatsAppNumberNormalized: '61400000006'
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Owner user profile created with ID: 044cd9f9-2366-46e9-97aa-71ca57b1c553
[Onboarding] Successfully created 1 total providers
[Onboarding] Creating default services...
[Onboarding] Created service: Single item move - One person
[Onboarding] Created service: Single item move - Two people
[Onboarding] Created service: Few items move - One person
[Onboarding] Created service: Few items move - Two people
[Onboarding] Created service: House Move 1 bedroom - One person
[Onboarding] Created service: House Move 1 bedroom - Two people
[Onboarding] Created service: House Move 2+ bedroom - One person
[Onboarding] Created service: House Move 2+ bedroom - Two people
[Onboarding] Creating provider calendar settings...
[Onboarding] Creating calendar settings for provider 0: John Doe (admin/provider)
[Onboarding] Provider 0 qualifies for calendar settings, proceeding...
[Onboarding] Calling CalendarSettings.save with data: {
  userId: '044cd9f9-2366-46e9-97aa-71ca57b1c553',
  businessId: '74f462ae-e424-4d64-b659-f91123470800',
  workingHours: {
    mon: { start: '09:00', end: '17:00' },
    tue: { start: '09:00', end: '17:00' },
    wed: { start: '09:00', end: '17:00' },
    thu: { start: '09:00', end: '17:00' },
    fri: { start: '09:00', end: '17:00' },
    sat: null,
    sun: null
  },
  manageCalendar: false
}
[CalendarSettings.save] Using service role client (bypasses RLS for calendar settings creation)
Failed to save calendar settings {
  message: 'null value in column "settings" of relation "calendarSettings" violates not-null constraint',
  details: 'Failing row contains (9afae22f-8b88-4a33-81df-4b3473b057ad, 2025-07-23 04:33:48.387402+00, 2025-07-23 04:33:48.36+00, 044cd9f9-2366-46e9-97aa-71ca57b1c553, 74f462ae-e424-4d64-b659-f91123470800, null, null, null, {"fri": {"end": "17:00", "start": "09:00"}, "mon": {"end": "17:0...).',
  code: '23502',
  hint: null
}
[Onboarding] Error creating calendar settings: Error [ModelError]: Failed to save calendar settings
    at handleModelError (lib/general-helpers/error.ts:16:8)
    at CalendarSettings.save (lib/database/models/calendar-settings.ts:78:23)
    at async POST (app/api/onboarding/create-business/route.ts:317:25)
  14 |   } : {};
  15 |   console.error(message, errorDetails);
> 16 |   throw new ModelError(message, error);
     |        ^
  17 | }  {
  originalError: [Object]
}
[Onboarding] Calendar settings error details: {
  error: 'Failed to save calendar settings',
  stack: 'ModelError: Failed to save calendar settings\n' +
    '    at handleModelError (webpack-internal:///(rsc)/./lib/general-helpers/error.ts:20:11)\n' +
    '    at CalendarSettings.save (webpack-internal:///(rsc)/./lib/database/models/calendar-settings.ts:33:89)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async POST (webpack-internal:///(rsc)/./app/api/onboarding/create-business/route.ts:303:36)\n' +
    '    at async AppRouteRouteModule.do (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:34112)\n' +
    '    at async AppRouteRouteModule.handle (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:41338)\n' +
    '    at async doRender (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/base-server.js:1513:42)\n' +
    '    at async DevServer.renderToResponseWithComponentsImpl (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/base-server.js:1915:28)\n' +
    '    at async DevServer.renderPageComponent (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/base-server.js:2403:24)\n' +
    '    at async DevServer.renderToResponseImpl (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/base-server.js:2440:32)\n' +
    '    at async DevServer.pipeImpl (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/base-server.js:1007:25)\n' +
    '    at async NextNodeServer.handleCatchallRenderRequest (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/next-server.js:305:17)\n' +
    '    at async DevServer.handleRequestImpl (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/base-server.js:899:17)\n' +
    '    at async /Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/dev/next-dev-server.js:371:20\n' +
    '    at async Span.traceAsyncFn (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/trace/trace.js:157:20)\n' +
    '    at async DevServer.handleRequest (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/dev/next-dev-server.js:368:24)\n' +
    '    at async invokeRender (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/lib/router-server.js:237:21)\n' +
    '    at async handleRequest (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/lib/router-server.js:428:24)\n' +
    '    at async requestHandlerImpl (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/lib/router-server.js:452:13)\n' +
    '    at async Server.requestListener (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/lib/start-server.js:158:13)',
  providers: 1,
  businessId: '74f462ae-e424-4d64-b659-f91123470800'
}
[Onboarding] Generating initial aggregated availability...
[computeAggregatedAvailability] No providers found for business 74f462ae-e424-4d64-b659-f91123470800
[Onboarding] Generated 0 days of aggregated availability
[Onboarding] Successfully saved 0 availability slot records
[Onboarding] Multi-provider business onboarding completed successfully!
 POST /api/onboarding/create-business 200 in 864ms
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 1 providers, owner role: admin/provider
[Onboarding] Creating owner auth user...
[Onboarding] Auth user creation failed: Error [AuthApiError]: A user with this email address has already been registered
    at async POST (app/api/onboarding/create-business/route.ts:56:49)
  54 |     // --- Step 1: Create Auth User for Owner ---
  55 |     console.log('[Onboarding] Creating owner auth user...');
> 56 |     const { data: authData, error: authError } = await adminSupa.auth.admin.createUser({
     |                                                 ^
  57 |       email: onboardingData.email,
  58 |       password: onboardingData.password,
  59 |       email_confirm: true, {
  __isAuthError: true,
  status: 422,
  code: 'email_exists'
}
 POST /api/onboarding/create-business 400 in 93ms
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 1 providers, owner role: admin/provider
[Onboarding] Creating owner auth user...
[Onboarding] Owner auth user created with ID: f3c5e2e9-f340-4ea5-8e3f-a48161924300
[Onboarding] Creating business...
[Onboarding] Business created with ID: 4c918720-6fc2-43c6-9831-9da25e0a0eb6
[Onboarding] Creating owner user profile with role: admin/provider
[User.add] Found existing auth user with email: test-onboarding@example.com
[User.add] About to upsert user profile: {
  id: 'f3c5e2e9-f340-4ea5-8e3f-a48161924300',
  firstName: 'John',
  lastName: 'Doe',
  role: 'admin/provider',
  businessId: '4c918720-6fc2-43c6-9831-9da25e0a0eb6',
  email: 'test-onboarding@example.com',
  phoneNormalized: '61400000009',
  whatsAppNumberNormalized: '61400000010'
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Owner user profile created with ID: f3c5e2e9-f340-4ea5-8e3f-a48161924300
[Onboarding] Successfully created 1 total providers
[Onboarding] Creating default services...
[Onboarding] Created service: Single item move - One person
[Onboarding] Created service: Single item move - Two people
[Onboarding] Created service: Few items move - One person
[Onboarding] Created service: Few items move - Two people
[Onboarding] Created service: House Move 1 bedroom - One person
[Onboarding] Created service: House Move 1 bedroom - Two people
[Onboarding] Created service: House Move 2+ bedroom - One person
[Onboarding] Created service: House Move 2+ bedroom - Two people
[Onboarding] Creating provider calendar settings...
[Onboarding] Creating calendar settings for provider 0: John Doe (admin/provider)
[Onboarding] Provider 0 qualifies for calendar settings, proceeding...
[Onboarding] Calling CalendarSettings.save with data: {
  userId: 'f3c5e2e9-f340-4ea5-8e3f-a48161924300',
  businessId: '4c918720-6fc2-43c6-9831-9da25e0a0eb6',
  workingHours: {
    mon: { start: '09:00', end: '17:00' },
    tue: { start: '09:00', end: '17:00' },
    wed: { start: '09:00', end: '17:00' },
    thu: { start: '09:00', end: '17:00' },
    fri: { start: '09:00', end: '17:00' },
    sat: null,
    sun: null
  },
  manageCalendar: false
}
[CalendarSettings.save] Using service role client (bypasses RLS for calendar settings creation)
Failed to save calendar settings {
  message: 'null value in column "settings" of relation "calendarSettings" violates not-null constraint',
  details: 'Failing row contains (ca3c3e80-e1a0-4941-b02c-ca8ff84f6530, 2025-07-23 04:33:50.082184+00, 2025-07-23 04:33:50.045+00, f3c5e2e9-f340-4ea5-8e3f-a48161924300, 4c918720-6fc2-43c6-9831-9da25e0a0eb6, null, null, null, {"fri": {"end": "17:00", "start": "09:00"}, "mon": {"end": "17:0...).',
  code: '23502',
  hint: null
}
[Onboarding] Error creating calendar settings: Error [ModelError]: Failed to save calendar settings
    at handleModelError (lib/general-helpers/error.ts:16:8)
    at CalendarSettings.save (lib/database/models/calendar-settings.ts:78:23)
    at async POST (app/api/onboarding/create-business/route.ts:317:25)
  14 |   } : {};
  15 |   console.error(message, errorDetails);
> 16 |   throw new ModelError(message, error);
     |        ^
  17 | }  {
  originalError: [Object]
}
[Onboarding] Calendar settings error details: {
  error: 'Failed to save calendar settings',
  stack: 'ModelError: Failed to save calendar settings\n' +
    '    at handleModelError (webpack-internal:///(rsc)/./lib/general-helpers/error.ts:20:11)\n' +
    '    at CalendarSettings.save (webpack-internal:///(rsc)/./lib/database/models/calendar-settings.ts:33:89)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async POST (webpack-internal:///(rsc)/./app/api/onboarding/create-business/route.ts:303:36)\n' +
    '    at async AppRouteRouteModule.do (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:34112)\n' +
    '    at async AppRouteRouteModule.handle (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:41338)\n' +
    '    at async doRender (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/base-server.js:1513:42)\n' +
    '    at async DevServer.renderToResponseWithComponentsImpl (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/base-server.js:1915:28)\n' +
    '    at async DevServer.renderPageComponent (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/base-server.js:2403:24)\n' +
    '    at async DevServer.renderToResponseImpl (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/base-server.js:2440:32)\n' +
    '    at async DevServer.pipeImpl (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/base-server.js:1007:25)\n' +
    '    at async NextNodeServer.handleCatchallRenderRequest (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/next-server.js:305:17)\n' +
    '    at async DevServer.handleRequestImpl (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/base-server.js:899:17)\n' +
    '    at async /Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/dev/next-dev-server.js:371:20\n' +
    '    at async Span.traceAsyncFn (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/trace/trace.js:157:20)\n' +
    '    at async DevServer.handleRequest (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/dev/next-dev-server.js:368:24)\n' +
    '    at async invokeRender (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/lib/router-server.js:237:21)\n' +
    '    at async handleRequest (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/lib/router-server.js:428:24)\n' +
    '    at async requestHandlerImpl (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/lib/router-server.js:452:13)\n' +
    '    at async Server.requestListener (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/lib/start-server.js:158:13)',
  providers: 1,
  businessId: '4c918720-6fc2-43c6-9831-9da25e0a0eb6'
}
[Onboarding] Generating initial aggregated availability...
[computeAggregatedAvailability] No providers found for business 4c918720-6fc2-43c6-9831-9da25e0a0eb6
[Onboarding] Generated 0 days of aggregated availability
[Onboarding] Successfully saved 0 availability slot records
[Onboarding] Creating Stripe Connect account...
[Environment] Using development environment for server client
[DEBUG] NODE_ENV: development
[DEBUG] All env keys count: 134
[DEBUG] Available env vars starting with STRIPE: [ 'STRIPE_SECRET_KEY', 'STRIPE_WEBHOOK_SECRET' ]
[DEBUG] Available env vars starting with NEXT: [
  'NEXT_RUNTIME',
  'NEXT_PRIVATE_WORKER',
  'NEXT_PRIVATE_TRACE_ID',
  'NEXT_PUBLIC_SUPABASE_URL',
  'NEXT_PUBLIC_SUPABASE_ANON_KEY',
  'NEXT_PUBLIC_SITE_URL',
  'NEXT_DEPLOYMENT_ID'
]
[DEBUG] STRIPE_SECRET_KEY exists: true
[DEBUG] STRIPE_SECRET_KEY length: 107
[DEBUG] STRIPE_SECRET_KEY value preview: sk_test_51...
[DEBUG] STRIPE_SECRET_KEY typeof: string
[DEBUG] STRIPE_SECRET_KEY raw value check: "sk_test_51Rd4eYP4p95"
[DEBUG] Creating Stripe instance with key length: 107
[DEBUG] Key starts with sk_: true
[DEBUG] Stripe instance created successfully
[Environment] Using development environment for service-role client
[Onboarding] Stripe account created: acct_1RnuNG03w1jDn8Ff
[Onboarding] Multi-provider business onboarding completed successfully!
 POST /api/onboarding/create-business 200 in 3736ms
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 1 providers, owner role: admin/provider
[Onboarding] Creating owner auth user...
[Onboarding] Owner auth user created with ID: 0c64b925-b86a-4bc5-bd81-9bc18d2b234d
[Onboarding] Creating business...
[Onboarding] Business created with ID: e4a3b07f-530f-45ad-8e7b-fc88a801813c
[Onboarding] Creating owner user profile with role: admin/provider
[User.add] Found existing auth user with email: test-onboarding@example.com
[User.add] About to upsert user profile: {
  id: '0c64b925-b86a-4bc5-bd81-9bc18d2b234d',
  firstName: 'John',
  lastName: 'Doe',
  role: 'admin/provider',
  businessId: 'e4a3b07f-530f-45ad-8e7b-fc88a801813c',
  email: 'test-onboarding@example.com',
  phoneNormalized: '61400000001',
  whatsAppNumberNormalized: '61400000002'
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Owner user profile created with ID: 0c64b925-b86a-4bc5-bd81-9bc18d2b234d
[Onboarding] Successfully created 1 total providers
[Onboarding] Creating default services...
[Onboarding] Created service: Single item move - One person
[Onboarding] Created service: Single item move - Two people
[Onboarding] Created service: Few items move - One person
[Onboarding] Created service: Few items move - Two people
[Onboarding] Created service: House Move 1 bedroom - One person
[Onboarding] Created service: House Move 1 bedroom - Two people
[Onboarding] Created service: House Move 2+ bedroom - One person
[Onboarding] Created service: House Move 2+ bedroom - Two people
[Onboarding] Creating provider calendar settings...
[Onboarding] Creating calendar settings for provider 0: John Doe (admin/provider)
[Onboarding] Provider 0 qualifies for calendar settings, proceeding...
[Onboarding] Calling CalendarSettings.save with data: {
  userId: '0c64b925-b86a-4bc5-bd81-9bc18d2b234d',
  businessId: 'e4a3b07f-530f-45ad-8e7b-fc88a801813c',
  workingHours: {
    mon: { start: '09:00', end: '17:00' },
    tue: { start: '09:00', end: '17:00' },
    wed: { start: '09:00', end: '17:00' },
    thu: { start: '09:00', end: '17:00' },
    fri: { start: '09:00', end: '17:00' },
    sat: null,
    sun: null
  },
  manageCalendar: false
}
[CalendarSettings.save] Using service role client (bypasses RLS for calendar settings creation)
Failed to save calendar settings {
  message: 'null value in column "settings" of relation "calendarSettings" violates not-null constraint',
  details: 'Failing row contains (fd771b0a-1898-40e7-a831-6e0b6bf545bb, 2025-07-23 04:34:39.91832+00, 2025-07-23 04:34:39.884+00, 0c64b925-b86a-4bc5-bd81-9bc18d2b234d, e4a3b07f-530f-45ad-8e7b-fc88a801813c, null, null, null, {"fri": {"end": "17:00", "start": "09:00"}, "mon": {"end": "17:0...).',
  code: '23502',
  hint: null
}
[Onboarding] Error creating calendar settings: Error [ModelError]: Failed to save calendar settings
    at handleModelError (lib/general-helpers/error.ts:16:8)
    at CalendarSettings.save (lib/database/models/calendar-settings.ts:78:23)
    at async POST (app/api/onboarding/create-business/route.ts:317:25)
  14 |   } : {};
  15 |   console.error(message, errorDetails);
> 16 |   throw new ModelError(message, error);
     |        ^
  17 | }  {
  originalError: [Object]
}
[Onboarding] Calendar settings error details: {
  error: 'Failed to save calendar settings',
  stack: 'ModelError: Failed to save calendar settings\n' +
    '    at handleModelError (webpack-internal:///(rsc)/./lib/general-helpers/error.ts:20:11)\n' +
    '    at CalendarSettings.save (webpack-internal:///(rsc)/./lib/database/models/calendar-settings.ts:33:89)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async POST (webpack-internal:///(rsc)/./app/api/onboarding/create-business/route.ts:303:36)\n' +
    '    at async AppRouteRouteModule.do (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:34112)\n' +
    '    at async AppRouteRouteModule.handle (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:41338)\n' +
    '    at async doRender (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/base-server.js:1513:42)\n' +
    '    at async DevServer.renderToResponseWithComponentsImpl (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/base-server.js:1915:28)\n' +
    '    at async DevServer.renderPageComponent (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/base-server.js:2403:24)\n' +
    '    at async DevServer.renderToResponseImpl (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/base-server.js:2440:32)\n' +
    '    at async DevServer.pipeImpl (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/base-server.js:1007:25)\n' +
    '    at async NextNodeServer.handleCatchallRenderRequest (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/next-server.js:305:17)\n' +
    '    at async DevServer.handleRequestImpl (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/base-server.js:899:17)\n' +
    '    at async /Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/dev/next-dev-server.js:371:20\n' +
    '    at async Span.traceAsyncFn (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/trace/trace.js:157:20)\n' +
    '    at async DevServer.handleRequest (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/dev/next-dev-server.js:368:24)\n' +
    '    at async invokeRender (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/lib/router-server.js:237:21)\n' +
    '    at async handleRequest (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/lib/router-server.js:428:24)\n' +
    '    at async requestHandlerImpl (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/lib/router-server.js:452:13)\n' +
    '    at async Server.requestListener (/Users/juanbernal/code/mesieou/2025/simple_booking/node_modules/next/dist/server/lib/start-server.js:158:13)',
  providers: 1,
  businessId: 'e4a3b07f-530f-45ad-8e7b-fc88a801813c'
}
[Onboarding] Generating initial aggregated availability...
[computeAggregatedAvailability] No providers found for business e4a3b07f-530f-45ad-8e7b-fc88a801813c
[Onboarding] Generated 0 days of aggregated availability
[Onboarding] Successfully saved 0 availability slot records
[Onboarding] Multi-provider business onboarding completed successfully!
 POST /api/onboarding/create-business 200 in 1014ms
 ✓ Compiled in 711ms (1151 modules)
<w> [webpack.cache.PackFileCacheStrategy] Caching failed for pack: Error: ENOENT: no such file or directory, rename '/Users/juanbernal/code/mesieou/2025/simple_booking/.next/cache/webpack/server-development/13.pack.gz_' -> '/Users/juanbernal/code/mesieou/2025/simple_booking/.next/cache/webpack/server-development/13.pack.gz'
 ✓ Compiled in 832ms (1097 modules)
 ✓ Compiled /api/onboarding/create-business in 266ms (585 modules)
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 1 providers, owner role: admin/provider
[Onboarding] Creating owner auth user...
[Onboarding] Owner auth user created with ID: 6e2ed8ac-2bf9-4311-893b-8047b271ed81
[Onboarding] Creating business...
[Onboarding] Business created with ID: 202f60e9-3b89-42ec-99f1-4f2c77106a6a
[Onboarding] Creating owner user profile with role: admin/provider
[User.add] Found existing auth user with email: test-onboarding@example.com
[User.add] About to upsert user profile: {
  id: '6e2ed8ac-2bf9-4311-893b-8047b271ed81',
  firstName: 'John',
  lastName: 'Doe',
  role: 'admin/provider',
  businessId: '202f60e9-3b89-42ec-99f1-4f2c77106a6a',
  email: 'test-onboarding@example.com',
  phoneNormalized: '61400000001',
  whatsAppNumberNormalized: '61400000002'
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Owner user profile created with ID: 6e2ed8ac-2bf9-4311-893b-8047b271ed81
[Onboarding] Successfully created 1 total providers
[Onboarding] Creating default services...
[Onboarding] Created service: Single item move - One person
[Onboarding] Created service: Single item move - Two people
[Onboarding] Created service: Few items move - One person
[Onboarding] Created service: Few items move - Two people
[Onboarding] Created service: House Move 1 bedroom - One person
[Onboarding] Created service: House Move 1 bedroom - Two people
[Onboarding] Created service: House Move 2+ bedroom - One person
[Onboarding] Created service: House Move 2+ bedroom - Two people
[Onboarding] Creating provider calendar settings...
[Onboarding] Creating calendar settings for provider 0: John Doe (admin/provider)
[Onboarding] Provider 0 qualifies for calendar settings, proceeding...
[Onboarding] Calling CalendarSettings.save with data: {
  userId: '6e2ed8ac-2bf9-4311-893b-8047b271ed81',
  businessId: '202f60e9-3b89-42ec-99f1-4f2c77106a6a',
  workingHours: {
    mon: { start: '09:00', end: '17:00' },
    tue: { start: '09:00', end: '17:00' },
    wed: { start: '09:00', end: '17:00' },
    thu: { start: '09:00', end: '17:00' },
    fri: { start: '09:00', end: '17:00' },
    sat: null,
    sun: null
  },
  manageCalendar: false,
  settings: { bufferTime: 15, timezone: 'Australia/Sydney' }
}
[CalendarSettings.save] Using service role client (bypasses RLS for calendar settings creation)
[Onboarding] CalendarSettings.save returned: CalendarSettings {
  data: {
    userId: '6e2ed8ac-2bf9-4311-893b-8047b271ed81',
    businessId: '202f60e9-3b89-42ec-99f1-4f2c77106a6a',
    workingHours: {
      fri: [Object],
      mon: [Object],
      sat: null,
      sun: null,
      thu: [Object],
      tue: [Object],
      wed: [Object]
    },
    timezone: undefined,
    manageCalendar: undefined,
    calendarId: null,
    calendarType: null,
    settings: { timezone: 'Australia/Sydney', bufferTime: 15 },
    lastSync: undefined
  },
  _id: 'a5635fc0-1a70-4261-a1c0-5143225ab810'
}
[Onboarding] Created calendar settings for John Doe (ID: a5635fc0-1a70-4261-a1c0-5143225ab810)
[Onboarding] Successfully created 1 calendar settings
[Onboarding] Generating initial aggregated availability...
[computeAggregatedAvailability] Found 1 providers for business 202f60e9-3b89-42ec-99f1-4f2c77106a6a
[Environment] Using development environment for server client
[Onboarding] Generated 22 days of aggregated availability
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[Onboarding] Successfully saved 22 availability slot records
[Onboarding] Multi-provider business onboarding completed successfully!
 POST /api/onboarding/create-business 200 in 2728ms
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 1 providers, owner role: admin/provider
[Onboarding] Creating owner auth user...
[Onboarding] Owner auth user created with ID: 79c1223c-9d76-4bc9-aca5-780f3ee54a7c
[Onboarding] Creating business...
[Onboarding] Business created with ID: 44fcd6a5-80fa-4e83-8aba-4b5c3e6255d8
[Onboarding] Creating owner user profile with role: admin/provider
[User.add] Found existing auth user with email: test-onboarding@example.com
[User.add] About to upsert user profile: {
  id: '79c1223c-9d76-4bc9-aca5-780f3ee54a7c',
  firstName: 'John',
  lastName: 'Doe',
  role: 'admin/provider',
  businessId: '44fcd6a5-80fa-4e83-8aba-4b5c3e6255d8',
  email: 'test-onboarding@example.com',
  phoneNormalized: '61400000001',
  whatsAppNumberNormalized: '61400000002'
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Owner user profile created with ID: 79c1223c-9d76-4bc9-aca5-780f3ee54a7c
[Onboarding] Successfully created 1 total providers
[Onboarding] Creating default services...
[Onboarding] Created service: Single item move - One person
[Onboarding] Created service: Single item move - Two people
[Onboarding] Created service: Few items move - One person
[Onboarding] Created service: Few items move - Two people
[Onboarding] Created service: House Move 1 bedroom - One person
[Onboarding] Created service: House Move 1 bedroom - Two people
[Onboarding] Created service: House Move 2+ bedroom - One person
[Onboarding] Created service: House Move 2+ bedroom - Two people
[Onboarding] Creating provider calendar settings...
[Onboarding] Creating calendar settings for provider 0: John Doe (admin/provider)
[Onboarding] Provider 0 qualifies for calendar settings, proceeding...
[Onboarding] Calling CalendarSettings.save with data: {
  userId: '79c1223c-9d76-4bc9-aca5-780f3ee54a7c',
  businessId: '44fcd6a5-80fa-4e83-8aba-4b5c3e6255d8',
  workingHours: {
    mon: { start: '09:00', end: '17:00' },
    tue: { start: '09:00', end: '17:00' },
    wed: { start: '09:00', end: '17:00' },
    thu: { start: '09:00', end: '17:00' },
    fri: { start: '09:00', end: '17:00' },
    sat: null,
    sun: null
  },
  manageCalendar: false,
  settings: { bufferTime: 15, timezone: 'Australia/Sydney' }
}
[CalendarSettings.save] Using service role client (bypasses RLS for calendar settings creation)
[Onboarding] CalendarSettings.save returned: CalendarSettings {
  data: {
    userId: '79c1223c-9d76-4bc9-aca5-780f3ee54a7c',
    businessId: '44fcd6a5-80fa-4e83-8aba-4b5c3e6255d8',
    workingHours: {
      fri: [Object],
      mon: [Object],
      sat: null,
      sun: null,
      thu: [Object],
      tue: [Object],
      wed: [Object]
    },
    timezone: undefined,
    manageCalendar: undefined,
    calendarId: null,
    calendarType: null,
    settings: { timezone: 'Australia/Sydney', bufferTime: 15 },
    lastSync: undefined
  },
  _id: 'c2c63743-4453-4ace-8aff-65330e467053'
}
[Onboarding] Created calendar settings for John Doe (ID: c2c63743-4453-4ace-8aff-65330e467053)
[Onboarding] Successfully created 1 calendar settings
[Onboarding] Generating initial aggregated availability...
[computeAggregatedAvailability] Found 1 providers for business 44fcd6a5-80fa-4e83-8aba-4b5c3e6255d8
[Environment] Using development environment for server client
[Onboarding] Generated 22 days of aggregated availability
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[Onboarding] Successfully saved 22 availability slot records
[Onboarding] Multi-provider business onboarding completed successfully!
 POST /api/onboarding/create-business 200 in 2795ms
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 2 providers, owner role: admin
[Onboarding] Creating owner auth user...
[Onboarding] Owner auth user created with ID: ffa41dfc-b21a-4083-9453-fbd4f6ca8ef2
[Onboarding] Creating business...
[Onboarding] Business created with ID: f482e227-c015-44fa-b931-9a28a4c191eb
[Onboarding] Creating owner user profile with role: admin
[User.add] Found existing auth user with email: test-onboarding@example.com
[User.add] About to upsert user profile: {
  id: 'ffa41dfc-b21a-4083-9453-fbd4f6ca8ef2',
  firstName: 'Jane',
  lastName: 'Smith',
  role: 'admin',
  businessId: 'f482e227-c015-44fa-b931-9a28a4c191eb',
  email: 'test-onboarding@example.com',
  phoneNormalized: '61400000003',
  whatsAppNumberNormalized: '61400000004'
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Owner user profile created with ID: ffa41dfc-b21a-4083-9453-fbd4f6ca8ef2
[Onboarding] Creating provider 2: Provider 2
[Onboarding] Failed to create auth user for provider 2: Error [AuthApiError]: A user with this email address has already been registered
    at async POST (app/api/onboarding/create-business/route.ts:167:69)
  165 |         
  166 |         // Create auth user for this provider
> 167 |         const { data: providerAuthData, error: providerAuthError } = await adminSupa.auth.admin.createUser({
      |                                                                     ^
  168 |           email: providerEmail,
  169 |           password: tempPassword,
  170 |           email_confirm: true, {
  __isAuthError: true,
  status: 422,
  code: 'email_exists'
}
[Onboarding] Error creating additional providers: Error: Failed to create provider 2 auth account
    at POST (app/api/onboarding/create-business/route.ts:183:16)
  181 |         if (providerAuthError || !providerAuthData.user) {
  182 |           console.error(`[Onboarding] Failed to create auth user for provider ${i + 1}:`, providerAuthError);
> 183 |           throw new Error(`Failed to create provider ${i + 1} auth account`);
      |                ^
  184 |         }
  185 |
  186 |         createdAuthUsers.push(providerAuthData.user.id);
[Environment] Using development environment for server client
 POST /api/onboarding/create-business 500 in 710ms
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 2 providers, owner role: admin/provider
[Onboarding] Creating owner auth user...
[Onboarding] Owner auth user created with ID: eba6574b-bd08-4b86-b2e8-2ab6387070bc
[Onboarding] Creating business...
[Onboarding] Business created with ID: 04d1f845-1b4a-4e3c-93d2-963a188eb17c
[Onboarding] Creating owner user profile with role: admin/provider
[User.add] Found existing auth user with email: test-onboarding@example.com
[User.add] About to upsert user profile: {
  id: 'eba6574b-bd08-4b86-b2e8-2ab6387070bc',
  firstName: 'Mike',
  lastName: 'Wilson',
  role: 'admin/provider',
  businessId: '04d1f845-1b4a-4e3c-93d2-963a188eb17c',
  email: 'test-onboarding@example.com',
  phoneNormalized: '61400000005',
  whatsAppNumberNormalized: '61400000006'
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Owner user profile created with ID: eba6574b-bd08-4b86-b2e8-2ab6387070bc
[Onboarding] Creating provider 2: Provider 2
[Onboarding] Failed to create auth user for provider 2: Error [AuthApiError]: A user with this email address has already been registered
    at async POST (app/api/onboarding/create-business/route.ts:167:69)
  165 |         
  166 |         // Create auth user for this provider
> 167 |         const { data: providerAuthData, error: providerAuthError } = await adminSupa.auth.admin.createUser({
      |                                                                     ^
  168 |           email: providerEmail,
  169 |           password: tempPassword,
  170 |           email_confirm: true, {
  __isAuthError: true,
  status: 422,
  code: 'email_exists'
}
[Onboarding] Error creating additional providers: Error: Failed to create provider 2 auth account
    at POST (app/api/onboarding/create-business/route.ts:183:16)
  181 |         if (providerAuthError || !providerAuthData.user) {
  182 |           console.error(`[Onboarding] Failed to create auth user for provider ${i + 1}:`, providerAuthError);
> 183 |           throw new Error(`Failed to create provider ${i + 1} auth account`);
      |                ^
  184 |         }
  185 |
  186 |         createdAuthUsers.push(providerAuthData.user.id);
[Environment] Using development environment for server client
 POST /api/onboarding/create-business 500 in 702ms
[Environment] Using development environment for service-role client
 POST /api/onboarding/create-business 400 in 9ms
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 1 providers, owner role: admin/provider
[Onboarding] Creating owner auth user...
[Onboarding] Owner auth user created with ID: a951d16a-9b6e-4fd3-9cd3-ee4ccbbbf46f
[Onboarding] Creating business...
[Onboarding] Business created with ID: dff8479e-4a59-4b9d-8377-0c6a3218f11d
[Onboarding] Creating owner user profile with role: admin/provider
[User.add] Found existing auth user with email: test-onboarding@example.com
[User.add] About to upsert user profile: {
  id: 'a951d16a-9b6e-4fd3-9cd3-ee4ccbbbf46f',
  firstName: 'John',
  lastName: 'Doe',
  role: 'admin/provider',
  businessId: 'dff8479e-4a59-4b9d-8377-0c6a3218f11d',
  email: 'test-onboarding@example.com',
  phoneNormalized: '61400000005',
  whatsAppNumberNormalized: '61400000006'
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Owner user profile created with ID: a951d16a-9b6e-4fd3-9cd3-ee4ccbbbf46f
[Onboarding] Successfully created 1 total providers
[Onboarding] Creating default services...
[Onboarding] Created service: Single item move - One person
[Onboarding] Created service: Single item move - Two people
[Onboarding] Created service: Few items move - One person
[Onboarding] Created service: Few items move - Two people
[Onboarding] Created service: House Move 1 bedroom - One person
[Onboarding] Created service: House Move 1 bedroom - Two people
[Onboarding] Created service: House Move 2+ bedroom - One person
[Onboarding] Created service: House Move 2+ bedroom - Two people
[Onboarding] Creating provider calendar settings...
[Onboarding] Creating calendar settings for provider 0: John Doe (admin/provider)
[Onboarding] Provider 0 qualifies for calendar settings, proceeding...
[Onboarding] Calling CalendarSettings.save with data: {
  userId: 'a951d16a-9b6e-4fd3-9cd3-ee4ccbbbf46f',
  businessId: 'dff8479e-4a59-4b9d-8377-0c6a3218f11d',
  workingHours: {
    mon: { start: '09:00', end: '17:00' },
    tue: { start: '09:00', end: '17:00' },
    wed: { start: '09:00', end: '17:00' },
    thu: { start: '09:00', end: '17:00' },
    fri: { start: '09:00', end: '17:00' },
    sat: null,
    sun: null
  },
  manageCalendar: false,
  settings: { bufferTime: 15, timezone: 'Australia/Sydney' }
}
[CalendarSettings.save] Using service role client (bypasses RLS for calendar settings creation)
[Onboarding] CalendarSettings.save returned: CalendarSettings {
  data: {
    userId: 'a951d16a-9b6e-4fd3-9cd3-ee4ccbbbf46f',
    businessId: 'dff8479e-4a59-4b9d-8377-0c6a3218f11d',
    workingHours: {
      fri: [Object],
      mon: [Object],
      sat: null,
      sun: null,
      thu: [Object],
      tue: [Object],
      wed: [Object]
    },
    timezone: undefined,
    manageCalendar: undefined,
    calendarId: null,
    calendarType: null,
    settings: { timezone: 'Australia/Sydney', bufferTime: 15 },
    lastSync: undefined
  },
  _id: 'e43327c3-4983-4b59-9619-ee96939fc0d8'
}
[Onboarding] Created calendar settings for John Doe (ID: e43327c3-4983-4b59-9619-ee96939fc0d8)
[Onboarding] Successfully created 1 calendar settings
[Onboarding] Generating initial aggregated availability...
[computeAggregatedAvailability] Found 1 providers for business dff8479e-4a59-4b9d-8377-0c6a3218f11d
[Environment] Using development environment for server client
[Onboarding] Generated 22 days of aggregated availability
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[Onboarding] Successfully saved 22 availability slot records
[Onboarding] Multi-provider business onboarding completed successfully!
 POST /api/onboarding/create-business 200 in 2702ms
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 1 providers, owner role: admin/provider
[Onboarding] Creating owner auth user...
[Onboarding] Auth user creation failed: Error [AuthApiError]: A user with this email address has already been registered
    at async POST (app/api/onboarding/create-business/route.ts:56:49)
  54 |     // --- Step 1: Create Auth User for Owner ---
  55 |     console.log('[Onboarding] Creating owner auth user...');
> 56 |     const { data: authData, error: authError } = await adminSupa.auth.admin.createUser({
     |                                                 ^
  57 |       email: onboardingData.email,
  58 |       password: onboardingData.password,
  59 |       email_confirm: true, {
  __isAuthError: true,
  status: 422,
  code: 'email_exists'
}
 POST /api/onboarding/create-business 400 in 97ms
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 1 providers, owner role: admin/provider
[Onboarding] Creating owner auth user...
[Onboarding] Owner auth user created with ID: 50ed7f76-11ca-4bca-9a3e-0800fa955309
[Onboarding] Creating business...
[Onboarding] Business created with ID: e6123bbd-c5c0-4a33-8234-a173a43ae47f
[Onboarding] Creating owner user profile with role: admin/provider
[User.add] Found existing auth user with email: test-onboarding@example.com
[User.add] About to upsert user profile: {
  id: '50ed7f76-11ca-4bca-9a3e-0800fa955309',
  firstName: 'John',
  lastName: 'Doe',
  role: 'admin/provider',
  businessId: 'e6123bbd-c5c0-4a33-8234-a173a43ae47f',
  email: 'test-onboarding@example.com',
  phoneNormalized: '61400000009',
  whatsAppNumberNormalized: '61400000010'
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Owner user profile created with ID: 50ed7f76-11ca-4bca-9a3e-0800fa955309
[Onboarding] Successfully created 1 total providers
[Onboarding] Creating default services...
[Onboarding] Created service: Single item move - One person
[Onboarding] Created service: Single item move - Two people
[Onboarding] Created service: Few items move - One person
[Onboarding] Created service: Few items move - Two people
[Onboarding] Created service: House Move 1 bedroom - One person
[Onboarding] Created service: House Move 1 bedroom - Two people
[Onboarding] Created service: House Move 2+ bedroom - One person
[Onboarding] Created service: House Move 2+ bedroom - Two people
[Onboarding] Creating provider calendar settings...
[Onboarding] Creating calendar settings for provider 0: John Doe (admin/provider)
[Onboarding] Provider 0 qualifies for calendar settings, proceeding...
[Onboarding] Calling CalendarSettings.save with data: {
  userId: '50ed7f76-11ca-4bca-9a3e-0800fa955309',
  businessId: 'e6123bbd-c5c0-4a33-8234-a173a43ae47f',
  workingHours: {
    mon: { start: '09:00', end: '17:00' },
    tue: { start: '09:00', end: '17:00' },
    wed: { start: '09:00', end: '17:00' },
    thu: { start: '09:00', end: '17:00' },
    fri: { start: '09:00', end: '17:00' },
    sat: null,
    sun: null
  },
  manageCalendar: false,
  settings: { bufferTime: 15, timezone: 'Australia/Sydney' }
}
[CalendarSettings.save] Using service role client (bypasses RLS for calendar settings creation)
[Onboarding] CalendarSettings.save returned: CalendarSettings {
  data: {
    userId: '50ed7f76-11ca-4bca-9a3e-0800fa955309',
    businessId: 'e6123bbd-c5c0-4a33-8234-a173a43ae47f',
    workingHours: {
      fri: [Object],
      mon: [Object],
      sat: null,
      sun: null,
      thu: [Object],
      tue: [Object],
      wed: [Object]
    },
    timezone: undefined,
    manageCalendar: undefined,
    calendarId: null,
    calendarType: null,
    settings: { timezone: 'Australia/Sydney', bufferTime: 15 },
    lastSync: undefined
  },
  _id: '75d593bc-c221-4c0f-89c7-12f4a24a39c8'
}
[Onboarding] Created calendar settings for John Doe (ID: 75d593bc-c221-4c0f-89c7-12f4a24a39c8)
[Onboarding] Successfully created 1 calendar settings
[Onboarding] Generating initial aggregated availability...
[computeAggregatedAvailability] Found 1 providers for business e6123bbd-c5c0-4a33-8234-a173a43ae47f
[Environment] Using development environment for server client
[Onboarding] Generated 22 days of aggregated availability
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[Onboarding] Successfully saved 22 availability slot records
[Onboarding] Creating Stripe Connect account...
[Environment] Using development environment for server client
[DEBUG] NODE_ENV: development
[DEBUG] All env keys count: 134
[DEBUG] Available env vars starting with STRIPE: [ 'STRIPE_SECRET_KEY', 'STRIPE_WEBHOOK_SECRET' ]
[DEBUG] Available env vars starting with NEXT: [
  'NEXT_RUNTIME',
  'NEXT_PRIVATE_WORKER',
  'NEXT_PRIVATE_TRACE_ID',
  'NEXT_PUBLIC_SUPABASE_URL',
  'NEXT_PUBLIC_SUPABASE_ANON_KEY',
  'NEXT_PUBLIC_SITE_URL',
  'NEXT_DEPLOYMENT_ID'
]
[DEBUG] STRIPE_SECRET_KEY exists: true
[DEBUG] STRIPE_SECRET_KEY length: 107
[DEBUG] STRIPE_SECRET_KEY value preview: sk_test_51...
[DEBUG] STRIPE_SECRET_KEY typeof: string
[DEBUG] STRIPE_SECRET_KEY raw value check: "sk_test_51Rd4eYP4p95"
[DEBUG] Creating Stripe instance with key length: 107
[DEBUG] Key starts with sk_: true
[DEBUG] Stripe instance created successfully
[Environment] Using development environment for service-role client
[Onboarding] Stripe account created: acct_1RnuiQP5Bn7XF801
[Onboarding] Multi-provider business onboarding completed successfully!
 POST /api/onboarding/create-business 200 in 5401ms
 ✓ Compiled in 959ms (1097 modules)
 ✓ Compiled in 572ms (1097 modules)
 ✓ Compiled in 286ms (1097 modules)
 ✓ Compiled in 410ms (54 modules)
 ✓ Compiled in 392ms (1097 modules)
 ✓ Compiled in 403ms (1097 modules)
 ✓ Compiled in 557ms (1097 modules)
 ✓ Compiled in 376ms (1097 modules)
 ✓ Compiled in 709ms (1097 modules)
 ✓ Compiled in 460ms (1097 modules)
 ⨯ ./lib/general-helpers/availability.ts
Error: Failed to read source code from /Users/juanbernal/code/mesieou/2025/simple_booking/lib/general-helpers/availability.ts

Caused by:
    No such file or directory (os error 2)

Import trace for requested module:
./lib/general-helpers/availability.ts
./app/api/onboarding/create-business/route.ts
 ⨯ ./lib/general-helpers/availability.ts
Error: Failed to read source code from /Users/juanbernal/code/mesieou/2025/simple_booking/lib/general-helpers/availability.ts

Caused by:
    No such file or directory (os error 2)

Import trace for requested module:
./lib/general-helpers/availability.ts
./app/api/onboarding/create-business/route.ts
 ⨯ ./lib/general-helpers/availability.ts
Error: Failed to read source code from /Users/juanbernal/code/mesieou/2025/simple_booking/lib/general-helpers/availability.ts

Caused by:
    No such file or directory (os error 2)

Import trace for requested module:
./lib/general-helpers/availability.ts
./app/api/onboarding/create-business/route.ts
 ○ Compiling /_not-found ...
 ⨯ ./lib/general-helpers/availability.ts
Error: Failed to read source code from /Users/juanbernal/code/mesieou/2025/simple_booking/lib/general-helpers/availability.ts

Caused by:
    No such file or directory (os error 2)

Import trace for requested module:
./lib/general-helpers/availability.ts
./app/api/onboarding/create-business/route.ts
 ⨯ ./lib/general-helpers/availability.ts
Error: Failed to read source code from /Users/juanbernal/code/mesieou/2025/simple_booking/lib/general-helpers/availability.ts

Caused by:
    No such file or directory (os error 2)

Import trace for requested module:
./lib/general-helpers/availability.ts
./app/api/onboarding/create-business/route.ts
 POST /api/onboarding/create-business 500 in 2053ms
 POST /api/onboarding/create-business 500 in 6ms
 POST /api/onboarding/create-business 500 in 5ms
 POST /api/onboarding/create-business 500 in 5ms
 POST /api/onboarding/create-business 500 in 4ms
 POST /api/onboarding/create-business 500 in 6ms
 POST /api/onboarding/create-business 500 in 34ms
 ✓ Compiled /_error in 752ms (2523 modules)
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 1 providers, owner role: admin/provider
[Onboarding] Creating owner auth user...
[Onboarding] Owner auth user created with ID: f5e6fbc7-c625-4fda-91cb-bffe5540ef2f
[Onboarding] Creating business...
[Onboarding] Business created with ID: 60dfc231-344a-426d-949c-5f93a67e045b
[Onboarding] Creating owner user profile with role: admin/provider
[User.add] Found existing auth user with email: test-onboarding@example.com
[User.add] About to upsert user profile: {
  id: 'f5e6fbc7-c625-4fda-91cb-bffe5540ef2f',
  firstName: 'John',
  lastName: 'Doe',
  role: 'admin/provider',
  businessId: '60dfc231-344a-426d-949c-5f93a67e045b',
  email: 'test-onboarding@example.com',
  phoneNormalized: '61400000001',
  whatsAppNumberNormalized: '61400000002'
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Owner user profile created with ID: f5e6fbc7-c625-4fda-91cb-bffe5540ef2f
[Onboarding] Successfully created 1 total providers
[Onboarding] Creating default services...
[Onboarding] Created service: Single item move - One person
[Onboarding] Created service: Single item move - Two people
[Onboarding] Created service: Few items move - One person
[Onboarding] Created service: Few items move - Two people
[Onboarding] Created service: House Move 1 bedroom - One person
[Onboarding] Created service: House Move 1 bedroom - Two people
[Onboarding] Created service: House Move 2+ bedroom - One person
[Onboarding] Created service: House Move 2+ bedroom - Two people
[Onboarding] Creating provider calendar settings...
[Onboarding] Creating calendar settings for provider 0: John Doe (admin/provider)
[Onboarding] Provider 0 qualifies for calendar settings, proceeding...
[Onboarding] Calling CalendarSettings.save with data: {
  userId: 'f5e6fbc7-c625-4fda-91cb-bffe5540ef2f',
  businessId: '60dfc231-344a-426d-949c-5f93a67e045b',
  workingHours: {
    mon: { start: '09:00', end: '17:00' },
    tue: { start: '09:00', end: '17:00' },
    wed: { start: '09:00', end: '17:00' },
    thu: { start: '09:00', end: '17:00' },
    fri: { start: '09:00', end: '17:00' },
    sat: null,
    sun: null
  },
  manageCalendar: false,
  settings: { bufferTime: 15, timezone: 'Australia/Sydney' }
}
[CalendarSettings.save] Using service role client (bypasses RLS for calendar settings creation)
[Onboarding] CalendarSettings.save returned: CalendarSettings {
  data: {
    userId: 'f5e6fbc7-c625-4fda-91cb-bffe5540ef2f',
    businessId: '60dfc231-344a-426d-949c-5f93a67e045b',
    workingHours: {
      fri: [Object],
      mon: [Object],
      sat: null,
      sun: null,
      thu: [Object],
      tue: [Object],
      wed: [Object]
    },
    timezone: undefined,
    manageCalendar: undefined,
    calendarId: null,
    calendarType: null,
    settings: { timezone: 'Australia/Sydney', bufferTime: 15 },
    lastSync: undefined
  },
  _id: 'f5c6480c-6416-4f6a-ba20-ae3e5093c9af'
}
[Onboarding] Created calendar settings for John Doe (ID: f5c6480c-6416-4f6a-ba20-ae3e5093c9af)
[Onboarding] Successfully created 1 calendar settings
[Onboarding] Generating initial aggregated availability...
[computeAggregatedAvailability] Found 1 providers for business 60dfc231-344a-426d-949c-5f93a67e045b
[Environment] Using development environment for server client
[Onboarding] Generated 22 days of aggregated availability
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[Onboarding] Successfully saved 22 availability slot records
[Onboarding] Multi-provider business onboarding completed successfully!
 POST /api/onboarding/create-business 200 in 3161ms
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 1 providers, owner role: admin/provider
[Onboarding] Creating owner auth user...
[Onboarding] Owner auth user created with ID: 0a400879-0b14-453f-b3a6-932068cb5735
[Onboarding] Creating business...
[Onboarding] Business created with ID: 276b132f-244a-4e2f-9abb-decffcd4a46b
[Onboarding] Creating owner user profile with role: admin/provider
[User.add] Found existing auth user with email: test-onboarding@example.com
[User.add] About to upsert user profile: {
  id: '0a400879-0b14-453f-b3a6-932068cb5735',
  firstName: 'John',
  lastName: 'Doe',
  role: 'admin/provider',
  businessId: '276b132f-244a-4e2f-9abb-decffcd4a46b',
  email: 'test-onboarding@example.com',
  phoneNormalized: '61400000001',
  whatsAppNumberNormalized: '61400000002'
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Owner user profile created with ID: 0a400879-0b14-453f-b3a6-932068cb5735
[Onboarding] Successfully created 1 total providers
[Onboarding] Creating default services...
[Onboarding] Created service: Single item move - One person
[Onboarding] Created service: Single item move - Two people
[Onboarding] Created service: Few items move - One person
[Onboarding] Created service: Few items move - Two people
[Onboarding] Created service: House Move 1 bedroom - One person
[Onboarding] Created service: House Move 1 bedroom - Two people
[Onboarding] Created service: House Move 2+ bedroom - One person
[Onboarding] Created service: House Move 2+ bedroom - Two people
[Onboarding] Creating provider calendar settings...
[Onboarding] Creating calendar settings for provider 0: John Doe (admin/provider)
[Onboarding] Provider 0 qualifies for calendar settings, proceeding...
[Onboarding] Calling CalendarSettings.save with data: {
  userId: '0a400879-0b14-453f-b3a6-932068cb5735',
  businessId: '276b132f-244a-4e2f-9abb-decffcd4a46b',
  workingHours: {
    mon: { start: '09:00', end: '17:00' },
    tue: { start: '09:00', end: '17:00' },
    wed: { start: '09:00', end: '17:00' },
    thu: { start: '09:00', end: '17:00' },
    fri: { start: '09:00', end: '17:00' },
    sat: null,
    sun: null
  },
  manageCalendar: false,
  settings: { bufferTime: 15, timezone: 'Australia/Sydney' }
}
[CalendarSettings.save] Using service role client (bypasses RLS for calendar settings creation)
[Onboarding] CalendarSettings.save returned: CalendarSettings {
  data: {
    userId: '0a400879-0b14-453f-b3a6-932068cb5735',
    businessId: '276b132f-244a-4e2f-9abb-decffcd4a46b',
    workingHours: {
      fri: [Object],
      mon: [Object],
      sat: null,
      sun: null,
      thu: [Object],
      tue: [Object],
      wed: [Object]
    },
    timezone: undefined,
    manageCalendar: undefined,
    calendarId: null,
    calendarType: null,
    settings: { timezone: 'Australia/Sydney', bufferTime: 15 },
    lastSync: undefined
  },
  _id: '46e72e16-25f0-49af-a39c-fbc8f13a0853'
}
[Onboarding] Created calendar settings for John Doe (ID: 46e72e16-25f0-49af-a39c-fbc8f13a0853)
[Onboarding] Successfully created 1 calendar settings
[Onboarding] Generating initial aggregated availability...
[computeAggregatedAvailability] Found 1 providers for business 276b132f-244a-4e2f-9abb-decffcd4a46b
[Environment] Using development environment for server client
[Onboarding] Generated 22 days of aggregated availability
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[Onboarding] Successfully saved 22 availability slot records
[Onboarding] Multi-provider business onboarding completed successfully!
 POST /api/onboarding/create-business 200 in 2538ms
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 2 providers, owner role: admin
[Onboarding] Creating owner auth user...
[Onboarding] Owner auth user created with ID: 9b6660c4-b252-4409-94a5-eac7e516ac85
[Onboarding] Creating business...
[Onboarding] Business created with ID: bf860b16-4ad4-4020-952a-7e90a747d165
[Onboarding] Creating owner user profile with role: admin
[User.add] Found existing auth user with email: test-onboarding@example.com
[User.add] About to upsert user profile: {
  id: '9b6660c4-b252-4409-94a5-eac7e516ac85',
  firstName: 'Jane',
  lastName: 'Smith',
  role: 'admin',
  businessId: 'bf860b16-4ad4-4020-952a-7e90a747d165',
  email: 'test-onboarding@example.com',
  phoneNormalized: '61400000003',
  whatsAppNumberNormalized: '61400000004'
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Owner user profile created with ID: 9b6660c4-b252-4409-94a5-eac7e516ac85
[Onboarding] Creating provider 2: Provider 2
[Onboarding] Failed to create auth user for provider 2: Error [AuthApiError]: A user with this email address has already been registered
    at async POST (app/api/onboarding/create-business/route.ts:167:69)
  165 |         
  166 |         // Create auth user for this provider
> 167 |         const { data: providerAuthData, error: providerAuthError } = await adminSupa.auth.admin.createUser({
      |                                                                     ^
  168 |           email: providerEmail,
  169 |           password: tempPassword,
  170 |           email_confirm: true, {
  __isAuthError: true,
  status: 422,
  code: 'email_exists'
}
[Onboarding] Error creating additional providers: Error: Failed to create provider 2 auth account
    at POST (app/api/onboarding/create-business/route.ts:183:16)
  181 |         if (providerAuthError || !providerAuthData.user) {
  182 |           console.error(`[Onboarding] Failed to create auth user for provider ${i + 1}:`, providerAuthError);
> 183 |           throw new Error(`Failed to create provider ${i + 1} auth account`);
      |                ^
  184 |         }
  185 |
  186 |         createdAuthUsers.push(providerAuthData.user.id);
[Environment] Using development environment for server client
 POST /api/onboarding/create-business 500 in 687ms
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 2 providers, owner role: admin/provider
[Onboarding] Creating owner auth user...
[Onboarding] Owner auth user created with ID: 353c4d40-55ac-47d2-ba89-0341d2ea40bb
[Onboarding] Creating business...
[Onboarding] Business created with ID: 84de6414-b1b1-4d37-9673-e1027359a293
[Onboarding] Creating owner user profile with role: admin/provider
[User.add] Found existing auth user with email: test-onboarding@example.com
[User.add] About to upsert user profile: {
  id: '353c4d40-55ac-47d2-ba89-0341d2ea40bb',
  firstName: 'Mike',
  lastName: 'Wilson',
  role: 'admin/provider',
  businessId: '84de6414-b1b1-4d37-9673-e1027359a293',
  email: 'test-onboarding@example.com',
  phoneNormalized: '61400000005',
  whatsAppNumberNormalized: '61400000006'
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Owner user profile created with ID: 353c4d40-55ac-47d2-ba89-0341d2ea40bb
[Onboarding] Creating provider 2: Provider 2
[Onboarding] Failed to create auth user for provider 2: Error [AuthApiError]: A user with this email address has already been registered
    at async POST (app/api/onboarding/create-business/route.ts:167:69)
  165 |         
  166 |         // Create auth user for this provider
> 167 |         const { data: providerAuthData, error: providerAuthError } = await adminSupa.auth.admin.createUser({
      |                                                                     ^
  168 |           email: providerEmail,
  169 |           password: tempPassword,
  170 |           email_confirm: true, {
  __isAuthError: true,
  status: 422,
  code: 'email_exists'
}
[Onboarding] Error creating additional providers: Error: Failed to create provider 2 auth account
    at POST (app/api/onboarding/create-business/route.ts:183:16)
  181 |         if (providerAuthError || !providerAuthData.user) {
  182 |           console.error(`[Onboarding] Failed to create auth user for provider ${i + 1}:`, providerAuthError);
> 183 |           throw new Error(`Failed to create provider ${i + 1} auth account`);
      |                ^
  184 |         }
  185 |
  186 |         createdAuthUsers.push(providerAuthData.user.id);
[Environment] Using development environment for server client
 POST /api/onboarding/create-business 500 in 600ms
[Environment] Using development environment for service-role client
 POST /api/onboarding/create-business 400 in 8ms
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 1 providers, owner role: admin/provider
[Onboarding] Creating owner auth user...
[Onboarding] Owner auth user created with ID: a508c4e7-5217-464d-85fc-9a3ba7b11080
[Onboarding] Creating business...
[Onboarding] Business created with ID: a5809e94-c4d5-4a0a-b1af-128f6f2eef0c
[Onboarding] Creating owner user profile with role: admin/provider
[User.add] Found existing auth user with email: test-onboarding@example.com
[User.add] About to upsert user profile: {
  id: 'a508c4e7-5217-464d-85fc-9a3ba7b11080',
  firstName: 'John',
  lastName: 'Doe',
  role: 'admin/provider',
  businessId: 'a5809e94-c4d5-4a0a-b1af-128f6f2eef0c',
  email: 'test-onboarding@example.com',
  phoneNormalized: '61400000005',
  whatsAppNumberNormalized: '61400000006'
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Owner user profile created with ID: a508c4e7-5217-464d-85fc-9a3ba7b11080
[Onboarding] Successfully created 1 total providers
[Onboarding] Creating default services...
[Onboarding] Created service: Single item move - One person
[Onboarding] Created service: Single item move - Two people
[Onboarding] Created service: Few items move - One person
[Onboarding] Created service: Few items move - Two people
[Onboarding] Created service: House Move 1 bedroom - One person
[Onboarding] Created service: House Move 1 bedroom - Two people
[Onboarding] Created service: House Move 2+ bedroom - One person
[Onboarding] Created service: House Move 2+ bedroom - Two people
[Onboarding] Creating provider calendar settings...
[Onboarding] Creating calendar settings for provider 0: John Doe (admin/provider)
[Onboarding] Provider 0 qualifies for calendar settings, proceeding...
[Onboarding] Calling CalendarSettings.save with data: {
  userId: 'a508c4e7-5217-464d-85fc-9a3ba7b11080',
  businessId: 'a5809e94-c4d5-4a0a-b1af-128f6f2eef0c',
  workingHours: {
    mon: { start: '09:00', end: '17:00' },
    tue: { start: '09:00', end: '17:00' },
    wed: { start: '09:00', end: '17:00' },
    thu: { start: '09:00', end: '17:00' },
    fri: { start: '09:00', end: '17:00' },
    sat: null,
    sun: null
  },
  manageCalendar: false,
  settings: { bufferTime: 15, timezone: 'Australia/Sydney' }
}
[CalendarSettings.save] Using service role client (bypasses RLS for calendar settings creation)
[Onboarding] CalendarSettings.save returned: CalendarSettings {
  data: {
    userId: 'a508c4e7-5217-464d-85fc-9a3ba7b11080',
    businessId: 'a5809e94-c4d5-4a0a-b1af-128f6f2eef0c',
    workingHours: {
      fri: [Object],
      mon: [Object],
      sat: null,
      sun: null,
      thu: [Object],
      tue: [Object],
      wed: [Object]
    },
    timezone: undefined,
    manageCalendar: undefined,
    calendarId: null,
    calendarType: null,
    settings: { timezone: 'Australia/Sydney', bufferTime: 15 },
    lastSync: undefined
  },
  _id: 'bb42a91e-4d54-4218-8a0a-6856b2614184'
}
[Onboarding] Created calendar settings for John Doe (ID: bb42a91e-4d54-4218-8a0a-6856b2614184)
[Onboarding] Successfully created 1 calendar settings
[Onboarding] Generating initial aggregated availability...
[computeAggregatedAvailability] Found 1 providers for business a5809e94-c4d5-4a0a-b1af-128f6f2eef0c
[Environment] Using development environment for server client
[Onboarding] Generated 22 days of aggregated availability
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[Onboarding] Successfully saved 22 availability slot records
[Onboarding] Multi-provider business onboarding completed successfully!
 POST /api/onboarding/create-business 200 in 2188ms
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 1 providers, owner role: admin/provider
[Onboarding] Creating owner auth user...
[Onboarding] Auth user creation failed: Error [AuthApiError]: A user with this email address has already been registered
    at async POST (app/api/onboarding/create-business/route.ts:56:49)
  54 |     // --- Step 1: Create Auth User for Owner ---
  55 |     console.log('[Onboarding] Creating owner auth user...');
> 56 |     const { data: authData, error: authError } = await adminSupa.auth.admin.createUser({
     |                                                 ^
  57 |       email: onboardingData.email,
  58 |       password: onboardingData.password,
  59 |       email_confirm: true, {
  __isAuthError: true,
  status: 422,
  code: 'email_exists'
}
 POST /api/onboarding/create-business 400 in 96ms
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 1 providers, owner role: admin/provider
[Onboarding] Creating owner auth user...
[Onboarding] Owner auth user created with ID: f9c84e44-88a2-44c1-b188-b439e14b487b
[Onboarding] Creating business...
[Onboarding] Business created with ID: 94ad9e6b-bc60-4a58-ae2c-69e87f3f6605
[Onboarding] Creating owner user profile with role: admin/provider
[User.add] Found existing auth user with email: test-onboarding@example.com
[User.add] About to upsert user profile: {
  id: 'f9c84e44-88a2-44c1-b188-b439e14b487b',
  firstName: 'John',
  lastName: 'Doe',
  role: 'admin/provider',
  businessId: '94ad9e6b-bc60-4a58-ae2c-69e87f3f6605',
  email: 'test-onboarding@example.com',
  phoneNormalized: '61400000009',
  whatsAppNumberNormalized: '61400000010'
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Owner user profile created with ID: f9c84e44-88a2-44c1-b188-b439e14b487b
[Onboarding] Successfully created 1 total providers
[Onboarding] Creating default services...
[Onboarding] Created service: Single item move - One person
[Onboarding] Created service: Single item move - Two people
[Onboarding] Created service: Few items move - One person
[Onboarding] Created service: Few items move - Two people
[Onboarding] Created service: House Move 1 bedroom - One person
[Onboarding] Created service: House Move 1 bedroom - Two people
[Onboarding] Created service: House Move 2+ bedroom - One person
[Onboarding] Created service: House Move 2+ bedroom - Two people
[Onboarding] Creating provider calendar settings...
[Onboarding] Creating calendar settings for provider 0: John Doe (admin/provider)
[Onboarding] Provider 0 qualifies for calendar settings, proceeding...
[Onboarding] Calling CalendarSettings.save with data: {
  userId: 'f9c84e44-88a2-44c1-b188-b439e14b487b',
  businessId: '94ad9e6b-bc60-4a58-ae2c-69e87f3f6605',
  workingHours: {
    mon: { start: '09:00', end: '17:00' },
    tue: { start: '09:00', end: '17:00' },
    wed: { start: '09:00', end: '17:00' },
    thu: { start: '09:00', end: '17:00' },
    fri: { start: '09:00', end: '17:00' },
    sat: null,
    sun: null
  },
  manageCalendar: false,
  settings: { bufferTime: 15, timezone: 'Australia/Sydney' }
}
[CalendarSettings.save] Using service role client (bypasses RLS for calendar settings creation)
[Onboarding] CalendarSettings.save returned: CalendarSettings {
  data: {
    userId: 'f9c84e44-88a2-44c1-b188-b439e14b487b',
    businessId: '94ad9e6b-bc60-4a58-ae2c-69e87f3f6605',
    workingHours: {
      fri: [Object],
      mon: [Object],
      sat: null,
      sun: null,
      thu: [Object],
      tue: [Object],
      wed: [Object]
    },
    timezone: undefined,
    manageCalendar: undefined,
    calendarId: null,
    calendarType: null,
    settings: { timezone: 'Australia/Sydney', bufferTime: 15 },
    lastSync: undefined
  },
  _id: '716c7173-e0c7-42e2-a075-7e6f4df01e9c'
}
[Onboarding] Created calendar settings for John Doe (ID: 716c7173-e0c7-42e2-a075-7e6f4df01e9c)
[Onboarding] Successfully created 1 calendar settings
[Onboarding] Generating initial aggregated availability...
[computeAggregatedAvailability] Found 1 providers for business 94ad9e6b-bc60-4a58-ae2c-69e87f3f6605
[Environment] Using development environment for server client
[Onboarding] Generated 22 days of aggregated availability
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[Onboarding] Successfully saved 22 availability slot records
[Onboarding] Creating Stripe Connect account...
[Environment] Using development environment for server client
[DEBUG] NODE_ENV: development
[DEBUG] All env keys count: 134
[DEBUG] Available env vars starting with STRIPE: [ 'STRIPE_SECRET_KEY', 'STRIPE_WEBHOOK_SECRET' ]
[DEBUG] Available env vars starting with NEXT: [
  'NEXT_RUNTIME',
  'NEXT_PRIVATE_WORKER',
  'NEXT_PRIVATE_TRACE_ID',
  'NEXT_PUBLIC_SUPABASE_URL',
  'NEXT_PUBLIC_SUPABASE_ANON_KEY',
  'NEXT_PUBLIC_SITE_URL',
  'NEXT_DEPLOYMENT_ID'
]
[DEBUG] STRIPE_SECRET_KEY exists: true
[DEBUG] STRIPE_SECRET_KEY length: 107
[DEBUG] STRIPE_SECRET_KEY value preview: sk_test_51...
[DEBUG] STRIPE_SECRET_KEY typeof: string
[DEBUG] STRIPE_SECRET_KEY raw value check: "sk_test_51Rd4eYP4p95"
[DEBUG] Creating Stripe instance with key length: 107
[DEBUG] Key starts with sk_: true
[DEBUG] Stripe instance created successfully
[Environment] Using development environment for service-role client
[Onboarding] Stripe account created: acct_1Ro1iE03zepkofOT
[Onboarding] Multi-provider business onboarding completed successfully!
 POST /api/onboarding/create-business 200 in 4876ms
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 2 providers, owner role: admin
[Onboarding] Creating owner auth user...
[Onboarding] Owner auth user created with ID: 601e3149-209b-4f2c-a723-4f8d7f598a15
[Onboarding] Creating business...
[Onboarding] Business created with ID: 8e112371-2551-4ef8-8dbf-80760663b38b
[Onboarding] Creating owner user profile with role: admin
[User.add] Found existing auth user with email: test-onboarding@example.com
[User.add] About to upsert user profile: {
  id: '601e3149-209b-4f2c-a723-4f8d7f598a15',
  firstName: 'Jane',
  lastName: 'Smith',
  role: 'admin',
  businessId: '8e112371-2551-4ef8-8dbf-80760663b38b',
  email: 'test-onboarding@example.com',
  phoneNormalized: '61400000003',
  whatsAppNumberNormalized: '61400000004'
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Owner user profile created with ID: 601e3149-209b-4f2c-a723-4f8d7f598a15
[Onboarding] Creating provider 2: Provider 2
[Onboarding] Failed to create auth user for provider 2: Error [AuthApiError]: A user with this email address has already been registered
    at async POST (app/api/onboarding/create-business/route.ts:167:69)
  165 |         
  166 |         // Create auth user for this provider
> 167 |         const { data: providerAuthData, error: providerAuthError } = await adminSupa.auth.admin.createUser({
      |                                                                     ^
  168 |           email: providerEmail,
  169 |           password: tempPassword,
  170 |           email_confirm: true, {
  __isAuthError: true,
  status: 422,
  code: 'email_exists'
}
[Onboarding] Error creating additional providers: Error: Failed to create provider 2 auth account
    at POST (app/api/onboarding/create-business/route.ts:183:16)
  181 |         if (providerAuthError || !providerAuthData.user) {
  182 |           console.error(`[Onboarding] Failed to create auth user for provider ${i + 1}:`, providerAuthError);
> 183 |           throw new Error(`Failed to create provider ${i + 1} auth account`);
      |                ^
  184 |         }
  185 |
  186 |         createdAuthUsers.push(providerAuthData.user.id);
[Environment] Using development environment for server client
 POST /api/onboarding/create-business 500 in 719ms
 ✓ Compiled in 595ms (1686 modules)
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 2 providers, owner role: admin
[Onboarding] Creating owner auth user...
[Onboarding] Owner auth user created with ID: f5e56432-d4ad-4bb4-8077-a93dd8c15b24
[Onboarding] Creating business...
[Onboarding] Business created with ID: d2d5d3e1-80a2-4e1c-8702-c5b6d6b1ff76
[Onboarding] Creating owner user profile with role: admin
[User.add] Found existing auth user with email: test-onboarding@example.com
[User.add] About to upsert user profile: {
  id: 'f5e56432-d4ad-4bb4-8077-a93dd8c15b24',
  firstName: 'Jane',
  lastName: 'Smith',
  role: 'admin',
  businessId: 'd2d5d3e1-80a2-4e1c-8702-c5b6d6b1ff76',
  email: 'test-onboarding@example.com',
  phoneNormalized: '61400000003',
  whatsAppNumberNormalized: '61400000004'
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Owner user profile created with ID: f5e56432-d4ad-4bb4-8077-a93dd8c15b24
[Onboarding] Creating provider 2: Sarah Johnson
[Onboarding] Failed to create auth user for provider 2: Error [AuthApiError]: A user with this email address has already been registered
    at async POST (app/api/onboarding/create-business/route.ts:167:69)
  165 |         
  166 |         // Create auth user for this provider
> 167 |         const { data: providerAuthData, error: providerAuthError } = await adminSupa.auth.admin.createUser({
      |                                                                     ^
  168 |           email: providerEmail,
  169 |           password: tempPassword,
  170 |           email_confirm: true, {
  __isAuthError: true,
  status: 422,
  code: 'email_exists'
}
[Onboarding] Error creating additional providers: Error: Failed to create provider 2 auth account
    at POST (app/api/onboarding/create-business/route.ts:183:16)
  181 |         if (providerAuthError || !providerAuthData.user) {
  182 |           console.error(`[Onboarding] Failed to create auth user for provider ${i + 1}:`, providerAuthError);
> 183 |           throw new Error(`Failed to create provider ${i + 1} auth account`);
      |                ^
  184 |         }
  185 |
  186 |         createdAuthUsers.push(providerAuthData.user.id);
[Environment] Using development environment for server client
 POST /api/onboarding/create-business 500 in 1092ms
 ✓ Compiled in 601ms (1686 modules)
 ✓ Compiled in 310ms (1686 modules)
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 2 providers, owner role: admin
[Onboarding] Creating owner auth user...
[Onboarding] Owner auth user created with ID: 80e59f6c-4819-4f84-878d-f3233248dae9
[Onboarding] Creating business...
[Onboarding] Business created with ID: 4cdb2fdf-ef30-4726-9b62-a04e6bc7e2db
[Onboarding] Creating owner user profile with role: admin
[User.add] Found existing auth user with email: test-onboarding@example.com
[User.add] About to upsert user profile: {
  id: '80e59f6c-4819-4f84-878d-f3233248dae9',
  firstName: 'Jane',
  lastName: 'Smith',
  role: 'admin',
  businessId: '4cdb2fdf-ef30-4726-9b62-a04e6bc7e2db',
  email: 'test-onboarding@example.com',
  phoneNormalized: '61400000003',
  whatsAppNumberNormalized: '61400000004'
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Owner user profile created with ID: 80e59f6c-4819-4f84-878d-f3233248dae9
[Onboarding] Creating provider 2: Sarah Johnson
[Onboarding] Debug info - i: 1, numberOfProviders: 2, providerNames: [ 'Sarah Johnson' ]
[Onboarding] Generated email: provider1@example.com, password length: 15
[Onboarding] Failed to create auth user for provider 2:
[Onboarding] Auth error: Error [AuthApiError]: A user with this email address has already been registered
    at async POST (app/api/onboarding/create-business/route.ts:170:69)
  168 |         
  169 |         // Create auth user for this provider
> 170 |         const { data: providerAuthData, error: providerAuthError } = await adminSupa.auth.admin.createUser({
      |                                                                     ^
  171 |           email: providerEmail,
  172 |           password: tempPassword,
  173 |           email_confirm: true, {
  __isAuthError: true,
  status: 422,
  code: 'email_exists'
}
[Onboarding] Auth data: { user: null }
[Onboarding] Email used: provider1@example.com
[Onboarding] Password used: .ftbz1hclyz9A1!
[Onboarding] Error creating additional providers: Error: Failed to create provider 2 auth account
    at POST (app/api/onboarding/create-business/route.ts:190:16)
  188 |           console.error(`[Onboarding] Email used:`, providerEmail);
  189 |           console.error(`[Onboarding] Password used:`, tempPassword);
> 190 |           throw new Error(`Failed to create provider ${i + 1} auth account`);
      |                ^
  191 |         }
  192 |
  193 |         createdAuthUsers.push(providerAuthData.user.id);
[Environment] Using development environment for server client
 POST /api/onboarding/create-business 500 in 830ms
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 2 providers, owner role: admin
[Onboarding] Creating owner auth user...
[Onboarding] Owner auth user created with ID: 599b5c83-3961-4baf-8432-d818a11e34bc
[Onboarding] Creating business...
[Onboarding] Business created with ID: eaf51a7a-f55f-4f88-9e88-ef3719af258e
[Onboarding] Creating owner user profile with role: admin
[User.add] Found existing auth user with email: test-onboarding@example.com
[User.add] About to upsert user profile: {
  id: '599b5c83-3961-4baf-8432-d818a11e34bc',
  firstName: 'Jane',
  lastName: 'Smith',
  role: 'admin',
  businessId: 'eaf51a7a-f55f-4f88-9e88-ef3719af258e',
  email: 'test-onboarding@example.com',
  phoneNormalized: '61400000003',
  whatsAppNumberNormalized: '61400000004'
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Owner user profile created with ID: 599b5c83-3961-4baf-8432-d818a11e34bc
[Onboarding] Creating provider 2: Sarah Johnson
[Onboarding] Debug info - i: 1, numberOfProviders: 2, providerNames: [ 'Sarah Johnson' ]
[Onboarding] Generated email: provider1@example.com, password length: 15
[Onboarding] Failed to create auth user for provider 2:
[Onboarding] Auth error: Error [AuthApiError]: A user with this email address has already been registered
    at async POST (app/api/onboarding/create-business/route.ts:170:69)
  168 |         
  169 |         // Create auth user for this provider
> 170 |         const { data: providerAuthData, error: providerAuthError } = await adminSupa.auth.admin.createUser({
      |                                                                     ^
  171 |           email: providerEmail,
  172 |           password: tempPassword,
  173 |           email_confirm: true, {
  __isAuthError: true,
  status: 422,
  code: 'email_exists'
}
[Onboarding] Auth data: { user: null }
[Onboarding] Email used: provider1@example.com
[Onboarding] Password used: .dgmpeb9xveaA1!
[Onboarding] Error creating additional providers: Error: Failed to create provider 2 auth account
    at POST (app/api/onboarding/create-business/route.ts:190:16)
  188 |           console.error(`[Onboarding] Email used:`, providerEmail);
  189 |           console.error(`[Onboarding] Password used:`, tempPassword);
> 190 |           throw new Error(`Failed to create provider ${i + 1} auth account`);
      |                ^
  191 |         }
  192 |
  193 |         createdAuthUsers.push(providerAuthData.user.id);
[Environment] Using development environment for server client
 POST /api/onboarding/create-business 500 in 797ms
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 2 providers, owner role: admin
[Onboarding] Creating owner auth user...
[Onboarding] Owner auth user created with ID: 05c40ee9-51ad-4dd1-881e-8af901c33f80
[Onboarding] Creating business...
[Onboarding] Business created with ID: edeec4fb-afd9-4cef-a6d3-0534c99005d3
[Onboarding] Creating owner user profile with role: admin
[User.add] Found existing auth user with email: test-onboarding@example.com
[User.add] About to upsert user profile: {
  id: '05c40ee9-51ad-4dd1-881e-8af901c33f80',
  firstName: 'Jane',
  lastName: 'Smith',
  role: 'admin',
  businessId: 'edeec4fb-afd9-4cef-a6d3-0534c99005d3',
  email: 'test-onboarding@example.com',
  phoneNormalized: '61400000003',
  whatsAppNumberNormalized: '61400000004'
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Owner user profile created with ID: 05c40ee9-51ad-4dd1-881e-8af901c33f80
[Onboarding] Creating provider 2: Sarah Johnson
[Onboarding] Debug info - i: 1, numberOfProviders: 2, providerNames: [ 'Sarah Johnson' ]
[Onboarding] Generated email: provider1@example.com, password length: 15
[Onboarding] Failed to create auth user for provider 2:
[Onboarding] Auth error: Error [AuthApiError]: A user with this email address has already been registered
    at async POST (app/api/onboarding/create-business/route.ts:170:69)
  168 |         
  169 |         // Create auth user for this provider
> 170 |         const { data: providerAuthData, error: providerAuthError } = await adminSupa.auth.admin.createUser({
      |                                                                     ^
  171 |           email: providerEmail,
  172 |           password: tempPassword,
  173 |           email_confirm: true, {
  __isAuthError: true,
  status: 422,
  code: 'email_exists'
}
[Onboarding] Auth data: { user: null }
[Onboarding] Email used: provider1@example.com
[Onboarding] Password used: .lhdh105ug8gA1!
[Onboarding] Error creating additional providers: Error: Failed to create provider 2 auth account
    at POST (app/api/onboarding/create-business/route.ts:190:16)
  188 |           console.error(`[Onboarding] Email used:`, providerEmail);
  189 |           console.error(`[Onboarding] Password used:`, tempPassword);
> 190 |           throw new Error(`Failed to create provider ${i + 1} auth account`);
      |                ^
  191 |         }
  192 |
  193 |         createdAuthUsers.push(providerAuthData.user.id);
[Environment] Using development environment for server client
 POST /api/onboarding/create-business 500 in 859ms
 ✓ Compiled in 493ms (1686 modules)
 ✓ Compiled in 635ms (1686 modules)
 ✓ Compiled in 393ms (1686 modules)
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 2 providers, owner role: admin
[Onboarding] Creating owner auth user...
[Onboarding] Owner auth user created with ID: e49bd334-dddc-4907-bac4-cede9cc0a91f
[Onboarding] Creating business...
[Onboarding] Business created with ID: e392e78c-b053-4d3c-9c4e-4f9c20680364
[Onboarding] Creating owner user profile with role: admin
[User.add] Found existing auth user with email: test-onboarding@example.com
[User.add] About to upsert user profile: {
  id: 'e49bd334-dddc-4907-bac4-cede9cc0a91f',
  firstName: 'Jane',
  lastName: 'Smith',
  role: 'admin',
  businessId: 'e392e78c-b053-4d3c-9c4e-4f9c20680364',
  email: 'test-onboarding@example.com',
  phoneNormalized: '61400000003',
  whatsAppNumberNormalized: '61400000004'
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Owner user profile created with ID: e49bd334-dddc-4907-bac4-cede9cc0a91f
[Onboarding] Creating provider 2: Sarah Johnson
[User.add] Found existing auth user with email: provider1-1753273711033@example.com
[User.add] About to upsert user profile: {
  id: '9856f993-3c16-4d2d-a802-ab856ba53e32',
  firstName: 'Sarah',
  lastName: 'Johnson',
  role: 'provider',
  businessId: 'e392e78c-b053-4d3c-9c4e-4f9c20680364',
  email: 'provider1-1753273711033@example.com',
  phoneNormalized: undefined
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Provider 2 user profile created with ID: 9856f993-3c16-4d2d-a802-ab856ba53e32
[Onboarding] Successfully created 2 total providers
[Onboarding] Creating default services...
[Onboarding] Created service: Basic Manicure
[Onboarding] Created service: Express Manicure
[Onboarding] Created service: Gel Manicure
[Onboarding] Created service: Press on Manicure
[Onboarding] Created service: Nail Art
[Onboarding] Created service: Basic Pedicure
[Onboarding] Created service: Gel Pedicure
[Onboarding] Created service: Ladies Haircut
[Onboarding] Created service: Hair Styling
[Onboarding] Created service: Braids
[Onboarding] Created service: Blow Dry
[Onboarding] Created service: Waves
[Onboarding] Created service: Treatments
[Onboarding] Creating provider calendar settings...
[Onboarding] Creating calendar settings for provider 0: Jane Smith (admin)
[Onboarding] Skipping calendar settings for Jane Smith - admin only (no service provision)
[Onboarding] Creating calendar settings for provider 1: Provider 2 (provider)
[Onboarding] Provider 1 qualifies for calendar settings, proceeding...
[Onboarding] Calling CalendarSettings.save with data: {
  userId: '9856f993-3c16-4d2d-a802-ab856ba53e32',
  businessId: 'e392e78c-b053-4d3c-9c4e-4f9c20680364',
  workingHours: {
    mon: { start: '09:00', end: '17:00' },
    tue: { start: '09:00', end: '17:00' },
    wed: { start: '09:00', end: '17:00' },
    thu: { start: '09:00', end: '17:00' },
    fri: { start: '09:00', end: '17:00' },
    sat: null,
    sun: null
  },
  manageCalendar: false,
  settings: { bufferTime: 15, timezone: 'Australia/Melbourne' }
}
[CalendarSettings.save] Using service role client (bypasses RLS for calendar settings creation)
[Onboarding] CalendarSettings.save returned: CalendarSettings {
  data: {
    userId: '9856f993-3c16-4d2d-a802-ab856ba53e32',
    businessId: 'e392e78c-b053-4d3c-9c4e-4f9c20680364',
    workingHours: {
      fri: [Object],
      mon: [Object],
      sat: null,
      sun: null,
      thu: [Object],
      tue: [Object],
      wed: [Object]
    },
    timezone: undefined,
    manageCalendar: undefined,
    calendarId: null,
    calendarType: null,
    settings: { timezone: 'Australia/Melbourne', bufferTime: 15 },
    lastSync: undefined
  },
  _id: 'bd96adbf-ee2c-4163-8e31-d7103d761497'
}
[Onboarding] Created calendar settings for Provider 2 (ID: bd96adbf-ee2c-4163-8e31-d7103d761497)
[Onboarding] Successfully created 1 calendar settings
[Onboarding] Generating initial aggregated availability...
[computeAggregatedAvailability] Found 1 providers for business e392e78c-b053-4d3c-9c4e-4f9c20680364
[Environment] Using development environment for server client
[Onboarding] Generated 22 days of aggregated availability
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[Onboarding] Successfully saved 22 availability slot records
[Onboarding] Multi-provider business onboarding completed successfully!
 POST /api/onboarding/create-business 200 in 3046ms
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 2 providers, owner role: admin
[Onboarding] Creating owner auth user...
[Onboarding] Owner auth user created with ID: 7ebe7ae9-84ff-4fab-9d05-dcacbcb2d21c
[Onboarding] Creating business...
[Onboarding] Business created with ID: da3f6e80-55e8-4e5d-9a35-751a44f4df78
[Onboarding] Creating owner user profile with role: admin
[User.add] Found existing auth user with email: test-onboarding@example.com
[User.add] About to upsert user profile: {
  id: '7ebe7ae9-84ff-4fab-9d05-dcacbcb2d21c',
  firstName: 'Jane',
  lastName: 'Smith',
  role: 'admin',
  businessId: 'da3f6e80-55e8-4e5d-9a35-751a44f4df78',
  email: 'test-onboarding@example.com',
  phoneNormalized: '61400000003',
  whatsAppNumberNormalized: '61400000004'
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Owner user profile created with ID: 7ebe7ae9-84ff-4fab-9d05-dcacbcb2d21c
[Onboarding] Creating provider 2: Sarah Johnson
[User.add] Found existing auth user with email: provider1-1753273752053@example.com
[User.add] About to upsert user profile: {
  id: '23c5aeb7-d793-4cbd-97f8-75f5ca10ba6e',
  firstName: 'Sarah',
  lastName: 'Johnson',
  role: 'provider',
  businessId: 'da3f6e80-55e8-4e5d-9a35-751a44f4df78',
  email: 'provider1-1753273752053@example.com',
  phoneNormalized: undefined
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Provider 2 user profile created with ID: 23c5aeb7-d793-4cbd-97f8-75f5ca10ba6e
[Onboarding] Successfully created 2 total providers
[Onboarding] Creating default services...
[Onboarding] Created service: Basic Manicure
[Onboarding] Created service: Express Manicure
[Onboarding] Created service: Gel Manicure
[Onboarding] Created service: Press on Manicure
[Onboarding] Created service: Nail Art
[Onboarding] Created service: Basic Pedicure
[Onboarding] Created service: Gel Pedicure
[Onboarding] Created service: Ladies Haircut
[Onboarding] Created service: Hair Styling
[Onboarding] Created service: Braids
[Onboarding] Created service: Blow Dry
[Onboarding] Created service: Waves
[Onboarding] Created service: Treatments
[Onboarding] Creating provider calendar settings...
[Onboarding] Creating calendar settings for provider 0: Jane Smith (admin)
[Onboarding] Skipping calendar settings for Jane Smith - admin only (no service provision)
[Onboarding] Creating calendar settings for provider 1: Provider 2 (provider)
[Onboarding] Provider 1 qualifies for calendar settings, proceeding...
[Onboarding] Calling CalendarSettings.save with data: {
  userId: '23c5aeb7-d793-4cbd-97f8-75f5ca10ba6e',
  businessId: 'da3f6e80-55e8-4e5d-9a35-751a44f4df78',
  workingHours: {
    mon: { start: '09:00', end: '17:00' },
    tue: { start: '09:00', end: '17:00' },
    wed: { start: '09:00', end: '17:00' },
    thu: { start: '09:00', end: '17:00' },
    fri: { start: '09:00', end: '17:00' },
    sat: null,
    sun: null
  },
  manageCalendar: false,
  settings: { bufferTime: 15, timezone: 'Australia/Melbourne' }
}
[CalendarSettings.save] Using service role client (bypasses RLS for calendar settings creation)
[Onboarding] CalendarSettings.save returned: CalendarSettings {
  data: {
    userId: '23c5aeb7-d793-4cbd-97f8-75f5ca10ba6e',
    businessId: 'da3f6e80-55e8-4e5d-9a35-751a44f4df78',
    workingHours: {
      fri: [Object],
      mon: [Object],
      sat: null,
      sun: null,
      thu: [Object],
      tue: [Object],
      wed: [Object]
    },
    timezone: undefined,
    manageCalendar: undefined,
    calendarId: null,
    calendarType: null,
    settings: { timezone: 'Australia/Melbourne', bufferTime: 15 },
    lastSync: undefined
  },
  _id: '22671197-081c-4788-a3ed-bf9d7fd9b214'
}
[Onboarding] Created calendar settings for Provider 2 (ID: 22671197-081c-4788-a3ed-bf9d7fd9b214)
[Onboarding] Successfully created 1 calendar settings
[Onboarding] Generating initial aggregated availability...
[computeAggregatedAvailability] Found 1 providers for business da3f6e80-55e8-4e5d-9a35-751a44f4df78
[Environment] Using development environment for server client
[Onboarding] Generated 22 days of aggregated availability
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[Onboarding] Successfully saved 22 availability slot records
[Onboarding] Multi-provider business onboarding completed successfully!
 POST /api/onboarding/create-business 200 in 3390ms
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 2 providers, owner role: admin
[Onboarding] Creating owner auth user...
[Onboarding] Owner auth user created with ID: 3dee8a6b-8943-473a-b44d-7c883c04353e
[Onboarding] Creating business...
[Onboarding] Business created with ID: 73245855-1fd0-43e3-a640-424481c62a4d
[Onboarding] Creating owner user profile with role: admin
[User.add] Found existing auth user with email: test-onboarding@example.com
[User.add] About to upsert user profile: {
  id: '3dee8a6b-8943-473a-b44d-7c883c04353e',
  firstName: 'Jane',
  lastName: 'Smith',
  role: 'admin',
  businessId: '73245855-1fd0-43e3-a640-424481c62a4d',
  email: 'test-onboarding@example.com',
  phoneNormalized: '61400000003',
  whatsAppNumberNormalized: '61400000004'
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Owner user profile created with ID: 3dee8a6b-8943-473a-b44d-7c883c04353e
[Onboarding] Creating provider 2: Sarah Johnson
[User.add] Found existing auth user with email: provider1-1753273814925@example.com
[User.add] About to upsert user profile: {
  id: 'd4031123-4273-4eea-9a01-8e0482cee477',
  firstName: 'Sarah',
  lastName: 'Johnson',
  role: 'provider',
  businessId: '73245855-1fd0-43e3-a640-424481c62a4d',
  email: 'provider1-1753273814925@example.com',
  phoneNormalized: undefined
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Provider 2 user profile created with ID: d4031123-4273-4eea-9a01-8e0482cee477
[Onboarding] Successfully created 2 total providers
[Onboarding] Creating default services...
[Onboarding] Created service: Basic Manicure
[Onboarding] Created service: Express Manicure
[Onboarding] Created service: Gel Manicure
[Onboarding] Created service: Press on Manicure
[Onboarding] Created service: Nail Art
[Onboarding] Created service: Basic Pedicure
[Onboarding] Created service: Gel Pedicure
[Onboarding] Created service: Ladies Haircut
[Onboarding] Created service: Hair Styling
[Onboarding] Created service: Braids
[Onboarding] Created service: Blow Dry
[Onboarding] Created service: Waves
[Onboarding] Created service: Treatments
[Onboarding] Creating provider calendar settings...
[Onboarding] Creating calendar settings for provider 0: Jane Smith (admin)
[Onboarding] Skipping calendar settings for Jane Smith - admin only (no service provision)
[Onboarding] Creating calendar settings for provider 1: Provider 2 (provider)
[Onboarding] Provider 1 qualifies for calendar settings, proceeding...
[Onboarding] Calling CalendarSettings.save with data: {
  userId: 'd4031123-4273-4eea-9a01-8e0482cee477',
  businessId: '73245855-1fd0-43e3-a640-424481c62a4d',
  workingHours: {
    mon: { start: '09:00', end: '17:00' },
    tue: { start: '09:00', end: '17:00' },
    wed: { start: '09:00', end: '17:00' },
    thu: { start: '09:00', end: '17:00' },
    fri: { start: '09:00', end: '17:00' },
    sat: null,
    sun: null
  },
  manageCalendar: false,
  settings: { bufferTime: 15, timezone: 'Australia/Melbourne' }
}
[CalendarSettings.save] Using service role client (bypasses RLS for calendar settings creation)
[Onboarding] CalendarSettings.save returned: CalendarSettings {
  data: {
    userId: 'd4031123-4273-4eea-9a01-8e0482cee477',
    businessId: '73245855-1fd0-43e3-a640-424481c62a4d',
    workingHours: {
      fri: [Object],
      mon: [Object],
      sat: null,
      sun: null,
      thu: [Object],
      tue: [Object],
      wed: [Object]
    },
    timezone: undefined,
    manageCalendar: undefined,
    calendarId: null,
    calendarType: null,
    settings: { timezone: 'Australia/Melbourne', bufferTime: 15 },
    lastSync: undefined
  },
  _id: 'adc103ef-2a12-4c2c-b35c-1b2d10149d61'
}
[Onboarding] Created calendar settings for Provider 2 (ID: adc103ef-2a12-4c2c-b35c-1b2d10149d61)
[Onboarding] Successfully created 1 calendar settings
[Onboarding] Generating initial aggregated availability...
[computeAggregatedAvailability] Found 1 providers for business 73245855-1fd0-43e3-a640-424481c62a4d
[Environment] Using development environment for server client
[Onboarding] Generated 22 days of aggregated availability
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[Onboarding] Successfully saved 22 availability slot records
[Onboarding] Multi-provider business onboarding completed successfully!
 POST /api/onboarding/create-business 200 in 3329ms
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 1 providers, owner role: admin/provider
[Onboarding] Creating owner auth user...
[Onboarding] Owner auth user created with ID: cabfdf92-3829-4772-83f3-aa97978a5994
[Onboarding] Creating business...
[Onboarding] Business created with ID: 97dc1ddb-645c-4178-bd8c-7e1efa3e3047
[Onboarding] Creating owner user profile with role: admin/provider
[User.add] Found existing auth user with email: test-onboarding@example.com
[User.add] About to upsert user profile: {
  id: 'cabfdf92-3829-4772-83f3-aa97978a5994',
  firstName: 'John',
  lastName: 'Doe',
  role: 'admin/provider',
  businessId: '97dc1ddb-645c-4178-bd8c-7e1efa3e3047',
  email: 'test-onboarding@example.com',
  phoneNormalized: '61400000001',
  whatsAppNumberNormalized: '61400000002'
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Owner user profile created with ID: cabfdf92-3829-4772-83f3-aa97978a5994
[Onboarding] Successfully created 1 total providers
[Onboarding] Creating default services...
[Onboarding] Created service: Single item move - One person
[Onboarding] Created service: Single item move - Two people
[Onboarding] Created service: Few items move - One person
[Onboarding] Created service: Few items move - Two people
[Onboarding] Created service: House Move 1 bedroom - One person
[Onboarding] Created service: House Move 1 bedroom - Two people
[Onboarding] Created service: House Move 2+ bedroom - One person
[Onboarding] Created service: House Move 2+ bedroom - Two people
[Onboarding] Creating provider calendar settings...
[Onboarding] Creating calendar settings for provider 0: John Doe (admin/provider)
[Onboarding] Provider 0 qualifies for calendar settings, proceeding...
[Onboarding] Calling CalendarSettings.save with data: {
  userId: 'cabfdf92-3829-4772-83f3-aa97978a5994',
  businessId: '97dc1ddb-645c-4178-bd8c-7e1efa3e3047',
  workingHours: {
    mon: { start: '09:00', end: '17:00' },
    tue: { start: '09:00', end: '17:00' },
    wed: { start: '09:00', end: '17:00' },
    thu: { start: '09:00', end: '17:00' },
    fri: { start: '09:00', end: '17:00' },
    sat: null,
    sun: null
  },
  manageCalendar: false,
  settings: { bufferTime: 15, timezone: 'Australia/Sydney' }
}
[CalendarSettings.save] Using service role client (bypasses RLS for calendar settings creation)
[Onboarding] CalendarSettings.save returned: CalendarSettings {
  data: {
    userId: 'cabfdf92-3829-4772-83f3-aa97978a5994',
    businessId: '97dc1ddb-645c-4178-bd8c-7e1efa3e3047',
    workingHours: {
      fri: [Object],
      mon: [Object],
      sat: null,
      sun: null,
      thu: [Object],
      tue: [Object],
      wed: [Object]
    },
    timezone: undefined,
    manageCalendar: undefined,
    calendarId: null,
    calendarType: null,
    settings: { timezone: 'Australia/Sydney', bufferTime: 15 },
    lastSync: undefined
  },
  _id: '8fc4556d-eaac-4a6e-90a7-b9fec7ac444e'
}
[Onboarding] Created calendar settings for John Doe (ID: 8fc4556d-eaac-4a6e-90a7-b9fec7ac444e)
[Onboarding] Successfully created 1 calendar settings
[Onboarding] Generating initial aggregated availability...
[computeAggregatedAvailability] Found 1 providers for business 97dc1ddb-645c-4178-bd8c-7e1efa3e3047
[Environment] Using development environment for server client
[Onboarding] Generated 22 days of aggregated availability
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[Onboarding] Successfully saved 22 availability slot records
[Onboarding] Multi-provider business onboarding completed successfully!
 POST /api/onboarding/create-business 200 in 2208ms
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 2 providers, owner role: admin
[Onboarding] Creating owner auth user...
[Onboarding] Owner auth user created with ID: abf68265-d2ac-49d9-b852-3579e6052128
[Onboarding] Creating business...
[Onboarding] Business created with ID: b42ea951-14c1-4046-97de-bd4f5ebfa262
[Onboarding] Creating owner user profile with role: admin
[User.add] Found existing auth user with email: test-onboarding@example.com
[User.add] About to upsert user profile: {
  id: 'abf68265-d2ac-49d9-b852-3579e6052128',
  firstName: 'Jane',
  lastName: 'Smith',
  role: 'admin',
  businessId: 'b42ea951-14c1-4046-97de-bd4f5ebfa262',
  email: 'test-onboarding@example.com',
  phoneNormalized: '61400000003',
  whatsAppNumberNormalized: '61400000004'
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Owner user profile created with ID: abf68265-d2ac-49d9-b852-3579e6052128
[Onboarding] Creating provider 2: Sarah Johnson
[User.add] Found existing auth user with email: provider1-1753273835115@example.com
[User.add] About to upsert user profile: {
  id: 'bfd24b2f-5371-41a0-8b02-2e4a98d783e1',
  firstName: 'Sarah',
  lastName: 'Johnson',
  role: 'provider',
  businessId: 'b42ea951-14c1-4046-97de-bd4f5ebfa262',
  email: 'provider1-1753273835115@example.com',
  phoneNormalized: undefined
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Provider 2 user profile created with ID: bfd24b2f-5371-41a0-8b02-2e4a98d783e1
[Onboarding] Successfully created 2 total providers
[Onboarding] Creating default services...
[Onboarding] Created service: Basic Manicure
[Onboarding] Created service: Express Manicure
[Onboarding] Created service: Gel Manicure
[Onboarding] Created service: Press on Manicure
[Onboarding] Created service: Nail Art
[Onboarding] Created service: Basic Pedicure
[Onboarding] Created service: Gel Pedicure
[Onboarding] Created service: Ladies Haircut
[Onboarding] Created service: Hair Styling
[Onboarding] Created service: Braids
[Onboarding] Created service: Blow Dry
[Onboarding] Created service: Waves
[Onboarding] Created service: Treatments
[Onboarding] Creating provider calendar settings...
[Onboarding] Creating calendar settings for provider 0: Jane Smith (admin)
[Onboarding] Skipping calendar settings for Jane Smith - admin only (no service provision)
[Onboarding] Creating calendar settings for provider 1: Provider 2 (provider)
[Onboarding] Provider 1 qualifies for calendar settings, proceeding...
[Onboarding] Calling CalendarSettings.save with data: {
  userId: 'bfd24b2f-5371-41a0-8b02-2e4a98d783e1',
  businessId: 'b42ea951-14c1-4046-97de-bd4f5ebfa262',
  workingHours: {
    mon: { start: '09:00', end: '17:00' },
    tue: { start: '09:00', end: '17:00' },
    wed: { start: '09:00', end: '17:00' },
    thu: { start: '09:00', end: '17:00' },
    fri: { start: '09:00', end: '17:00' },
    sat: null,
    sun: null
  },
  manageCalendar: false,
  settings: { bufferTime: 15, timezone: 'Australia/Melbourne' }
}
[CalendarSettings.save] Using service role client (bypasses RLS for calendar settings creation)
[Onboarding] CalendarSettings.save returned: CalendarSettings {
  data: {
    userId: 'bfd24b2f-5371-41a0-8b02-2e4a98d783e1',
    businessId: 'b42ea951-14c1-4046-97de-bd4f5ebfa262',
    workingHours: {
      fri: [Object],
      mon: [Object],
      sat: null,
      sun: null,
      thu: [Object],
      tue: [Object],
      wed: [Object]
    },
    timezone: undefined,
    manageCalendar: undefined,
    calendarId: null,
    calendarType: null,
    settings: { timezone: 'Australia/Melbourne', bufferTime: 15 },
    lastSync: undefined
  },
  _id: '94b7146e-b781-43cc-9699-4ebd7b6856c3'
}
[Onboarding] Created calendar settings for Provider 2 (ID: 94b7146e-b781-43cc-9699-4ebd7b6856c3)
[Onboarding] Successfully created 1 calendar settings
[Onboarding] Generating initial aggregated availability...
[computeAggregatedAvailability] Found 1 providers for business b42ea951-14c1-4046-97de-bd4f5ebfa262
[Environment] Using development environment for server client
[Onboarding] Generated 22 days of aggregated availability
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[Onboarding] Successfully saved 22 availability slot records
[Onboarding] Multi-provider business onboarding completed successfully!
 POST /api/onboarding/create-business 200 in 2752ms
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 2 providers, owner role: admin/provider
[Onboarding] Creating owner auth user...
[Onboarding] Owner auth user created with ID: a994a175-1da9-4d51-883c-44a3a8f328dc
[Onboarding] Creating business...
[Onboarding] Business created with ID: 0c57f94f-8cd8-4592-bf60-a0de0f4e1351
[Onboarding] Creating owner user profile with role: admin/provider
[User.add] Found existing auth user with email: test-onboarding@example.com
[User.add] About to upsert user profile: {
  id: 'a994a175-1da9-4d51-883c-44a3a8f328dc',
  firstName: 'Mike',
  lastName: 'Wilson',
  role: 'admin/provider',
  businessId: '0c57f94f-8cd8-4592-bf60-a0de0f4e1351',
  email: 'test-onboarding@example.com',
  phoneNormalized: '61400000005',
  whatsAppNumberNormalized: '61400000006'
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Owner user profile created with ID: a994a175-1da9-4d51-883c-44a3a8f328dc
[Onboarding] Creating provider 2: Alex Thompson
[User.add] Found existing auth user with email: provider1-1753273838963@example.com
[User.add] About to upsert user profile: {
  id: '02342000-47a1-4fe0-8d1f-3f7cd2f5b5cd',
  firstName: 'Alex',
  lastName: 'Thompson',
  role: 'provider',
  businessId: '0c57f94f-8cd8-4592-bf60-a0de0f4e1351',
  email: 'provider1-1753273838963@example.com',
  phoneNormalized: undefined
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Provider 2 user profile created with ID: 02342000-47a1-4fe0-8d1f-3f7cd2f5b5cd
[Onboarding] Successfully created 2 total providers
[Onboarding] Creating default services...
[Onboarding] Created service: Single item move - One person
[Onboarding] Created service: Single item move - Two people
[Onboarding] Created service: Few items move - One person
[Onboarding] Created service: Few items move - Two people
[Onboarding] Created service: House Move 1 bedroom - One person
[Onboarding] Created service: House Move 1 bedroom - Two people
[Onboarding] Created service: House Move 2+ bedroom - One person
[Onboarding] Created service: House Move 2+ bedroom - Two people
[Onboarding] Creating provider calendar settings...
[Onboarding] Creating calendar settings for provider 0: Mike Wilson (admin/provider)
[Onboarding] Provider 0 qualifies for calendar settings, proceeding...
[Onboarding] Calling CalendarSettings.save with data: {
  userId: 'a994a175-1da9-4d51-883c-44a3a8f328dc',
  businessId: '0c57f94f-8cd8-4592-bf60-a0de0f4e1351',
  workingHours: {
    mon: { start: '09:00', end: '17:00' },
    tue: { start: '09:00', end: '17:00' },
    wed: { start: '09:00', end: '17:00' },
    thu: { start: '09:00', end: '17:00' },
    fri: { start: '09:00', end: '17:00' },
    sat: null,
    sun: null
  },
  manageCalendar: false,
  settings: { bufferTime: 15, timezone: 'Australia/Brisbane' }
}
[CalendarSettings.save] Using service role client (bypasses RLS for calendar settings creation)
[Onboarding] CalendarSettings.save returned: CalendarSettings {
  data: {
    userId: 'a994a175-1da9-4d51-883c-44a3a8f328dc',
    businessId: '0c57f94f-8cd8-4592-bf60-a0de0f4e1351',
    workingHours: {
      fri: [Object],
      mon: [Object],
      sat: null,
      sun: null,
      thu: [Object],
      tue: [Object],
      wed: [Object]
    },
    timezone: undefined,
    manageCalendar: undefined,
    calendarId: null,
    calendarType: null,
    settings: { timezone: 'Australia/Brisbane', bufferTime: 15 },
    lastSync: undefined
  },
  _id: 'c3408a8c-b21b-40c5-8cbc-31d0b6134280'
}
[Onboarding] Created calendar settings for Mike Wilson (ID: c3408a8c-b21b-40c5-8cbc-31d0b6134280)
[Onboarding] Creating calendar settings for provider 1: Provider 2 (provider)
[Onboarding] Provider 1 qualifies for calendar settings, proceeding...
[Onboarding] Calling CalendarSettings.save with data: {
  userId: '02342000-47a1-4fe0-8d1f-3f7cd2f5b5cd',
  businessId: '0c57f94f-8cd8-4592-bf60-a0de0f4e1351',
  workingHours: {
    mon: { start: '09:00', end: '17:00' },
    tue: { start: '09:00', end: '17:00' },
    wed: { start: '09:00', end: '17:00' },
    thu: { start: '09:00', end: '17:00' },
    fri: { start: '09:00', end: '17:00' },
    sat: null,
    sun: null
  },
  manageCalendar: false,
  settings: { bufferTime: 15, timezone: 'Australia/Brisbane' }
}
[CalendarSettings.save] Using service role client (bypasses RLS for calendar settings creation)
[Onboarding] CalendarSettings.save returned: CalendarSettings {
  data: {
    userId: '02342000-47a1-4fe0-8d1f-3f7cd2f5b5cd',
    businessId: '0c57f94f-8cd8-4592-bf60-a0de0f4e1351',
    workingHours: {
      fri: [Object],
      mon: [Object],
      sat: null,
      sun: null,
      thu: [Object],
      tue: [Object],
      wed: [Object]
    },
    timezone: undefined,
    manageCalendar: undefined,
    calendarId: null,
    calendarType: null,
    settings: { timezone: 'Australia/Brisbane', bufferTime: 15 },
    lastSync: undefined
  },
  _id: '2ed84b79-2541-4f82-8292-490ac3785a17'
}
[Onboarding] Created calendar settings for Provider 2 (ID: 2ed84b79-2541-4f82-8292-490ac3785a17)
[Onboarding] Successfully created 2 calendar settings
[Onboarding] Generating initial aggregated availability...
[computeAggregatedAvailability] Found 2 providers for business 0c57f94f-8cd8-4592-bf60-a0de0f4e1351
[Environment] Using development environment for server client
[Environment] Using development environment for server client
[Onboarding] Generated 22 days of aggregated availability
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[Onboarding] Successfully saved 22 availability slot records
[Onboarding] Multi-provider business onboarding completed successfully!
 POST /api/onboarding/create-business 200 in 2540ms
[Environment] Using development environment for service-role client
 POST /api/onboarding/create-business 400 in 5ms
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 1 providers, owner role: admin/provider
[Onboarding] Creating owner auth user...
[Onboarding] Owner auth user created with ID: 877d54d6-b8b5-48f9-a901-0a77887afaa2
[Onboarding] Creating business...
[Onboarding] Business created with ID: 9e40baa2-d9c1-41e6-b484-f6680d0683df
[Onboarding] Creating owner user profile with role: admin/provider
[User.add] Found existing auth user with email: test-onboarding@example.com
[User.add] About to upsert user profile: {
  id: '877d54d6-b8b5-48f9-a901-0a77887afaa2',
  firstName: 'John',
  lastName: 'Doe',
  role: 'admin/provider',
  businessId: '9e40baa2-d9c1-41e6-b484-f6680d0683df',
  email: 'test-onboarding@example.com',
  phoneNormalized: '61400000005',
  whatsAppNumberNormalized: '61400000006'
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Owner user profile created with ID: 877d54d6-b8b5-48f9-a901-0a77887afaa2
[Onboarding] Successfully created 1 total providers
[Onboarding] Creating default services...
[Onboarding] Created service: Single item move - One person
[Onboarding] Created service: Single item move - Two people
[Onboarding] Created service: Few items move - One person
[Onboarding] Created service: Few items move - Two people
[Onboarding] Created service: House Move 1 bedroom - One person
[Onboarding] Created service: House Move 1 bedroom - Two people
[Onboarding] Created service: House Move 2+ bedroom - One person
[Onboarding] Created service: House Move 2+ bedroom - Two people
[Onboarding] Creating provider calendar settings...
[Onboarding] Creating calendar settings for provider 0: John Doe (admin/provider)
[Onboarding] Provider 0 qualifies for calendar settings, proceeding...
[Onboarding] Calling CalendarSettings.save with data: {
  userId: '877d54d6-b8b5-48f9-a901-0a77887afaa2',
  businessId: '9e40baa2-d9c1-41e6-b484-f6680d0683df',
  workingHours: {
    mon: { start: '09:00', end: '17:00' },
    tue: { start: '09:00', end: '17:00' },
    wed: { start: '09:00', end: '17:00' },
    thu: { start: '09:00', end: '17:00' },
    fri: { start: '09:00', end: '17:00' },
    sat: null,
    sun: null
  },
  manageCalendar: false,
  settings: { bufferTime: 15, timezone: 'Australia/Sydney' }
}
[CalendarSettings.save] Using service role client (bypasses RLS for calendar settings creation)
[Onboarding] CalendarSettings.save returned: CalendarSettings {
  data: {
    userId: '877d54d6-b8b5-48f9-a901-0a77887afaa2',
    businessId: '9e40baa2-d9c1-41e6-b484-f6680d0683df',
    workingHours: {
      fri: [Object],
      mon: [Object],
      sat: null,
      sun: null,
      thu: [Object],
      tue: [Object],
      wed: [Object]
    },
    timezone: undefined,
    manageCalendar: undefined,
    calendarId: null,
    calendarType: null,
    settings: { timezone: 'Australia/Sydney', bufferTime: 15 },
    lastSync: undefined
  },
  _id: 'dc352c2b-313d-42fc-bcf5-45835fcb0ae6'
}
[Onboarding] Created calendar settings for John Doe (ID: dc352c2b-313d-42fc-bcf5-45835fcb0ae6)
[Onboarding] Successfully created 1 calendar settings
[Onboarding] Generating initial aggregated availability...
[computeAggregatedAvailability] Found 1 providers for business 9e40baa2-d9c1-41e6-b484-f6680d0683df
[Environment] Using development environment for server client
[Onboarding] Generated 22 days of aggregated availability
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[Onboarding] Successfully saved 22 availability slot records
[Onboarding] Multi-provider business onboarding completed successfully!
 POST /api/onboarding/create-business 200 in 2331ms
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 1 providers, owner role: admin/provider
[Onboarding] Creating owner auth user...
[Onboarding] Auth user creation failed: Error [AuthApiError]: A user with this email address has already been registered
    at async POST (app/api/onboarding/create-business/route.ts:56:49)
  54 |     // --- Step 1: Create Auth User for Owner ---
  55 |     console.log('[Onboarding] Creating owner auth user...');
> 56 |     const { data: authData, error: authError } = await adminSupa.auth.admin.createUser({
     |                                                 ^
  57 |       email: onboardingData.email,
  58 |       password: onboardingData.password,
  59 |       email_confirm: true, {
  __isAuthError: true,
  status: 422,
  code: 'email_exists'
}
 POST /api/onboarding/create-business 400 in 134ms
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 1 providers, owner role: admin/provider
[Onboarding] Creating owner auth user...
[Onboarding] Owner auth user created with ID: b0ac7aee-c11e-4e2a-99a7-7be45d6694dd
[Onboarding] Creating business...
[Onboarding] Business created with ID: 5dafff2e-8da6-4353-b9c2-ed42ef92d587
[Onboarding] Creating owner user profile with role: admin/provider
[User.add] Found existing auth user with email: test-onboarding@example.com
[User.add] About to upsert user profile: {
  id: 'b0ac7aee-c11e-4e2a-99a7-7be45d6694dd',
  firstName: 'John',
  lastName: 'Doe',
  role: 'admin/provider',
  businessId: '5dafff2e-8da6-4353-b9c2-ed42ef92d587',
  email: 'test-onboarding@example.com',
  phoneNormalized: '61400000009',
  whatsAppNumberNormalized: '61400000010'
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Owner user profile created with ID: b0ac7aee-c11e-4e2a-99a7-7be45d6694dd
[Onboarding] Successfully created 1 total providers
[Onboarding] Creating default services...
[Onboarding] Created service: Single item move - One person
[Onboarding] Created service: Single item move - Two people
[Onboarding] Created service: Few items move - One person
[Onboarding] Created service: Few items move - Two people
[Onboarding] Created service: House Move 1 bedroom - One person
[Onboarding] Created service: House Move 1 bedroom - Two people
[Onboarding] Created service: House Move 2+ bedroom - One person
[Onboarding] Created service: House Move 2+ bedroom - Two people
[Onboarding] Creating provider calendar settings...
[Onboarding] Creating calendar settings for provider 0: John Doe (admin/provider)
[Onboarding] Provider 0 qualifies for calendar settings, proceeding...
[Onboarding] Calling CalendarSettings.save with data: {
  userId: 'b0ac7aee-c11e-4e2a-99a7-7be45d6694dd',
  businessId: '5dafff2e-8da6-4353-b9c2-ed42ef92d587',
  workingHours: {
    mon: { start: '09:00', end: '17:00' },
    tue: { start: '09:00', end: '17:00' },
    wed: { start: '09:00', end: '17:00' },
    thu: { start: '09:00', end: '17:00' },
    fri: { start: '09:00', end: '17:00' },
    sat: null,
    sun: null
  },
  manageCalendar: false,
  settings: { bufferTime: 15, timezone: 'Australia/Sydney' }
}
[CalendarSettings.save] Using service role client (bypasses RLS for calendar settings creation)
[Onboarding] CalendarSettings.save returned: CalendarSettings {
  data: {
    userId: 'b0ac7aee-c11e-4e2a-99a7-7be45d6694dd',
    businessId: '5dafff2e-8da6-4353-b9c2-ed42ef92d587',
    workingHours: {
      fri: [Object],
      mon: [Object],
      sat: null,
      sun: null,
      thu: [Object],
      tue: [Object],
      wed: [Object]
    },
    timezone: undefined,
    manageCalendar: undefined,
    calendarId: null,
    calendarType: null,
    settings: { timezone: 'Australia/Sydney', bufferTime: 15 },
    lastSync: undefined
  },
  _id: 'a8a1eb69-ab4e-46a2-b162-531120cadbbb'
}
[Onboarding] Created calendar settings for John Doe (ID: a8a1eb69-ab4e-46a2-b162-531120cadbbb)
[Onboarding] Successfully created 1 calendar settings
[Onboarding] Generating initial aggregated availability...
[computeAggregatedAvailability] Found 1 providers for business 5dafff2e-8da6-4353-b9c2-ed42ef92d587
[Environment] Using development environment for server client
[Onboarding] Generated 22 days of aggregated availability
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[Onboarding] Successfully saved 22 availability slot records
[Onboarding] Creating Stripe Connect account...
[Environment] Using development environment for server client
[DEBUG] NODE_ENV: development
[DEBUG] All env keys count: 134
[DEBUG] Available env vars starting with STRIPE: [ 'STRIPE_SECRET_KEY', 'STRIPE_WEBHOOK_SECRET' ]
[DEBUG] Available env vars starting with NEXT: [
  'NEXT_RUNTIME',
  'NEXT_PRIVATE_WORKER',
  'NEXT_PRIVATE_TRACE_ID',
  'NEXT_PUBLIC_SUPABASE_URL',
  'NEXT_PUBLIC_SUPABASE_ANON_KEY',
  'NEXT_PUBLIC_SITE_URL',
  'NEXT_DEPLOYMENT_ID'
]
[DEBUG] STRIPE_SECRET_KEY exists: true
[DEBUG] STRIPE_SECRET_KEY length: 107
[DEBUG] STRIPE_SECRET_KEY value preview: sk_test_51...
[DEBUG] STRIPE_SECRET_KEY typeof: string
[DEBUG] STRIPE_SECRET_KEY raw value check: "sk_test_51Rd4eYP4p95"
[DEBUG] Creating Stripe instance with key length: 107
[DEBUG] Key starts with sk_: true
[DEBUG] Stripe instance created successfully
[Environment] Using development environment for service-role client
[Onboarding] Stripe account created: acct_1Ro1oq04pzmqGII1
[Onboarding] Multi-provider business onboarding completed successfully!
 POST /api/onboarding/create-business 200 in 5232ms
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 2 providers, owner role: admin/provider
[Onboarding] Creating owner auth user...
[Onboarding] Owner auth user created with ID: 4238466a-62f7-4b4d-9bff-bf1ea08aa0f3
[Onboarding] Creating business...
[Onboarding] Business created with ID: c1c38c91-f517-4887-b2ec-0c4bfec1df26
[Onboarding] Creating owner user profile with role: admin/provider
[User.add] Found existing auth user with email: test-onboarding@example.com
[User.add] About to upsert user profile: {
  id: '4238466a-62f7-4b4d-9bff-bf1ea08aa0f3',
  firstName: 'Mike',
  lastName: 'Wilson',
  role: 'admin/provider',
  businessId: 'c1c38c91-f517-4887-b2ec-0c4bfec1df26',
  email: 'test-onboarding@example.com',
  phoneNormalized: '61400000005',
  whatsAppNumberNormalized: '61400000006'
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Owner user profile created with ID: 4238466a-62f7-4b4d-9bff-bf1ea08aa0f3
[Onboarding] Creating provider 2: Alex Thompson
[User.add] Found existing auth user with email: provider1-1753273873366@example.com
[User.add] About to upsert user profile: {
  id: '86043a26-d93d-4431-910a-08b926c56b40',
  firstName: 'Alex',
  lastName: 'Thompson',
  role: 'provider',
  businessId: 'c1c38c91-f517-4887-b2ec-0c4bfec1df26',
  email: 'provider1-1753273873366@example.com',
  phoneNormalized: undefined
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Provider 2 user profile created with ID: 86043a26-d93d-4431-910a-08b926c56b40
[Onboarding] Successfully created 2 total providers
[Onboarding] Creating default services...
[Onboarding] Created service: Single item move - One person
[Onboarding] Created service: Single item move - Two people
[Onboarding] Created service: Few items move - One person
[Onboarding] Created service: Few items move - Two people
[Onboarding] Created service: House Move 1 bedroom - One person
[Onboarding] Created service: House Move 1 bedroom - Two people
[Onboarding] Created service: House Move 2+ bedroom - One person
[Onboarding] Created service: House Move 2+ bedroom - Two people
[Onboarding] Creating provider calendar settings...
[Onboarding] Creating calendar settings for provider 0: Mike Wilson (admin/provider)
[Onboarding] Provider 0 qualifies for calendar settings, proceeding...
[Onboarding] Calling CalendarSettings.save with data: {
  userId: '4238466a-62f7-4b4d-9bff-bf1ea08aa0f3',
  businessId: 'c1c38c91-f517-4887-b2ec-0c4bfec1df26',
  workingHours: {
    mon: { start: '09:00', end: '17:00' },
    tue: { start: '09:00', end: '17:00' },
    wed: { start: '09:00', end: '17:00' },
    thu: { start: '09:00', end: '17:00' },
    fri: { start: '09:00', end: '17:00' },
    sat: null,
    sun: null
  },
  manageCalendar: false,
  settings: { bufferTime: 15, timezone: 'Australia/Brisbane' }
}
[CalendarSettings.save] Using service role client (bypasses RLS for calendar settings creation)
[Onboarding] CalendarSettings.save returned: CalendarSettings {
  data: {
    userId: '4238466a-62f7-4b4d-9bff-bf1ea08aa0f3',
    businessId: 'c1c38c91-f517-4887-b2ec-0c4bfec1df26',
    workingHours: {
      fri: [Object],
      mon: [Object],
      sat: null,
      sun: null,
      thu: [Object],
      tue: [Object],
      wed: [Object]
    },
    timezone: undefined,
    manageCalendar: undefined,
    calendarId: null,
    calendarType: null,
    settings: { timezone: 'Australia/Brisbane', bufferTime: 15 },
    lastSync: undefined
  },
  _id: '609e23e1-4ba3-4a68-8b00-8c6de0430e4c'
}
[Onboarding] Created calendar settings for Mike Wilson (ID: 609e23e1-4ba3-4a68-8b00-8c6de0430e4c)
[Onboarding] Creating calendar settings for provider 1: Provider 2 (provider)
[Onboarding] Provider 1 qualifies for calendar settings, proceeding...
[Onboarding] Calling CalendarSettings.save with data: {
  userId: '86043a26-d93d-4431-910a-08b926c56b40',
  businessId: 'c1c38c91-f517-4887-b2ec-0c4bfec1df26',
  workingHours: {
    mon: { start: '09:00', end: '17:00' },
    tue: { start: '09:00', end: '17:00' },
    wed: { start: '09:00', end: '17:00' },
    thu: { start: '09:00', end: '17:00' },
    fri: { start: '09:00', end: '17:00' },
    sat: null,
    sun: null
  },
  manageCalendar: false,
  settings: { bufferTime: 15, timezone: 'Australia/Brisbane' }
}
[CalendarSettings.save] Using service role client (bypasses RLS for calendar settings creation)
[Onboarding] CalendarSettings.save returned: CalendarSettings {
  data: {
    userId: '86043a26-d93d-4431-910a-08b926c56b40',
    businessId: 'c1c38c91-f517-4887-b2ec-0c4bfec1df26',
    workingHours: {
      fri: [Object],
      mon: [Object],
      sat: null,
      sun: null,
      thu: [Object],
      tue: [Object],
      wed: [Object]
    },
    timezone: undefined,
    manageCalendar: undefined,
    calendarId: null,
    calendarType: null,
    settings: { timezone: 'Australia/Brisbane', bufferTime: 15 },
    lastSync: undefined
  },
  _id: '0f63a85e-fe50-400e-9d66-957bd641b904'
}
[Onboarding] Created calendar settings for Provider 2 (ID: 0f63a85e-fe50-400e-9d66-957bd641b904)
[Onboarding] Successfully created 2 calendar settings
[Onboarding] Generating initial aggregated availability...
[computeAggregatedAvailability] Found 2 providers for business c1c38c91-f517-4887-b2ec-0c4bfec1df26
[Environment] Using development environment for server client
[Environment] Using development environment for server client
[Onboarding] Generated 22 days of aggregated availability
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[Onboarding] Successfully saved 22 availability slot records
[Onboarding] Multi-provider business onboarding completed successfully!
 POST /api/onboarding/create-business 200 in 3813ms
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 2 providers, owner role: admin/provider
[Onboarding] Creating owner auth user...
[Onboarding] Owner auth user created with ID: b161942a-1005-4db0-865b-d1d517451f81
[Onboarding] Creating business...
[Onboarding] Business created with ID: 248a5e44-1df1-4346-804c-73ab39397e22
[Onboarding] Creating owner user profile with role: admin/provider
[User.add] Found existing auth user with email: test-onboarding@example.com
[User.add] About to upsert user profile: {
  id: 'b161942a-1005-4db0-865b-d1d517451f81',
  firstName: 'Mike',
  lastName: 'Wilson',
  role: 'admin/provider',
  businessId: '248a5e44-1df1-4346-804c-73ab39397e22',
  email: 'test-onboarding@example.com',
  phoneNormalized: '61400000005',
  whatsAppNumberNormalized: '61400000006'
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Owner user profile created with ID: b161942a-1005-4db0-865b-d1d517451f81
[Onboarding] Creating provider 2: Alex Thompson
[User.add] Found existing auth user with email: provider1-1753273913592@example.com
[User.add] About to upsert user profile: {
  id: '29143495-e8cf-46e3-8b25-e2a2e87e21f2',
  firstName: 'Alex',
  lastName: 'Thompson',
  role: 'provider',
  businessId: '248a5e44-1df1-4346-804c-73ab39397e22',
  email: 'provider1-1753273913592@example.com',
  phoneNormalized: undefined
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Provider 2 user profile created with ID: 29143495-e8cf-46e3-8b25-e2a2e87e21f2
[Onboarding] Successfully created 2 total providers
[Onboarding] Creating default services...
[Onboarding] Created service: Single item move - One person
[Onboarding] Created service: Single item move - Two people
[Onboarding] Created service: Few items move - One person
[Onboarding] Created service: Few items move - Two people
[Onboarding] Created service: House Move 1 bedroom - One person
[Onboarding] Created service: House Move 1 bedroom - Two people
[Onboarding] Created service: House Move 2+ bedroom - One person
[Onboarding] Created service: House Move 2+ bedroom - Two people
[Onboarding] Creating provider calendar settings...
[Onboarding] Creating calendar settings for provider 0: Mike Wilson (admin/provider)
[Onboarding] Provider 0 qualifies for calendar settings, proceeding...
[Onboarding] Calling CalendarSettings.save with data: {
  userId: 'b161942a-1005-4db0-865b-d1d517451f81',
  businessId: '248a5e44-1df1-4346-804c-73ab39397e22',
  workingHours: {
    mon: { start: '09:00', end: '17:00' },
    tue: { start: '09:00', end: '17:00' },
    wed: { start: '09:00', end: '17:00' },
    thu: { start: '09:00', end: '17:00' },
    fri: { start: '09:00', end: '17:00' },
    sat: null,
    sun: null
  },
  manageCalendar: false,
  settings: { bufferTime: 15, timezone: 'Australia/Brisbane' }
}
[CalendarSettings.save] Using service role client (bypasses RLS for calendar settings creation)
[Onboarding] CalendarSettings.save returned: CalendarSettings {
  data: {
    userId: 'b161942a-1005-4db0-865b-d1d517451f81',
    businessId: '248a5e44-1df1-4346-804c-73ab39397e22',
    workingHours: {
      fri: [Object],
      mon: [Object],
      sat: null,
      sun: null,
      thu: [Object],
      tue: [Object],
      wed: [Object]
    },
    timezone: undefined,
    manageCalendar: undefined,
    calendarId: null,
    calendarType: null,
    settings: { timezone: 'Australia/Brisbane', bufferTime: 15 },
    lastSync: undefined
  },
  _id: '6e0030aa-e57d-4b59-b7bf-510b9274c959'
}
[Onboarding] Created calendar settings for Mike Wilson (ID: 6e0030aa-e57d-4b59-b7bf-510b9274c959)
[Onboarding] Creating calendar settings for provider 1: Provider 2 (provider)
[Onboarding] Provider 1 qualifies for calendar settings, proceeding...
[Onboarding] Calling CalendarSettings.save with data: {
  userId: '29143495-e8cf-46e3-8b25-e2a2e87e21f2',
  businessId: '248a5e44-1df1-4346-804c-73ab39397e22',
  workingHours: {
    mon: { start: '09:00', end: '17:00' },
    tue: { start: '09:00', end: '17:00' },
    wed: { start: '09:00', end: '17:00' },
    thu: { start: '09:00', end: '17:00' },
    fri: { start: '09:00', end: '17:00' },
    sat: null,
    sun: null
  },
  manageCalendar: false,
  settings: { bufferTime: 15, timezone: 'Australia/Brisbane' }
}
[CalendarSettings.save] Using service role client (bypasses RLS for calendar settings creation)
[Onboarding] CalendarSettings.save returned: CalendarSettings {
  data: {
    userId: '29143495-e8cf-46e3-8b25-e2a2e87e21f2',
    businessId: '248a5e44-1df1-4346-804c-73ab39397e22',
    workingHours: {
      fri: [Object],
      mon: [Object],
      sat: null,
      sun: null,
      thu: [Object],
      tue: [Object],
      wed: [Object]
    },
    timezone: undefined,
    manageCalendar: undefined,
    calendarId: null,
    calendarType: null,
    settings: { timezone: 'Australia/Brisbane', bufferTime: 15 },
    lastSync: undefined
  },
  _id: 'dfd48e1d-30cb-4002-97fb-80b9a9eb0b12'
}
[Onboarding] Created calendar settings for Provider 2 (ID: dfd48e1d-30cb-4002-97fb-80b9a9eb0b12)
[Onboarding] Successfully created 2 calendar settings
[Onboarding] Generating initial aggregated availability...
[computeAggregatedAvailability] Found 2 providers for business 248a5e44-1df1-4346-804c-73ab39397e22
[Environment] Using development environment for server client
[Environment] Using development environment for server client
[Onboarding] Generated 22 days of aggregated availability
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[Onboarding] Successfully saved 22 availability slot records
[Onboarding] Multi-provider business onboarding completed successfully!
 POST /api/onboarding/create-business 200 in 3256ms
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 2 providers, owner role: admin/provider
[Onboarding] Creating owner auth user...
[Onboarding] Owner auth user created with ID: 35051519-58a5-4e4d-a920-292bdc0ed18d
[Onboarding] Creating business...
[Onboarding] Business created with ID: 7583b198-b58f-4282-a802-100375bebc91
[Onboarding] Creating owner user profile with role: admin/provider
[User.add] Found existing auth user with email: test-onboarding@example.com
[User.add] About to upsert user profile: {
  id: '35051519-58a5-4e4d-a920-292bdc0ed18d',
  firstName: 'Mike',
  lastName: 'Wilson',
  role: 'admin/provider',
  businessId: '7583b198-b58f-4282-a802-100375bebc91',
  email: 'test-onboarding@example.com',
  phoneNormalized: '61400000005',
  whatsAppNumberNormalized: '61400000006'
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Owner user profile created with ID: 35051519-58a5-4e4d-a920-292bdc0ed18d
[Onboarding] Creating provider 2: Alex Thompson
[User.add] Found existing auth user with email: provider1-1753273965360@example.com
[User.add] About to upsert user profile: {
  id: 'a6cdef7a-b0d5-4b7a-a8b2-bbbf5a75ebbf',
  firstName: 'Alex',
  lastName: 'Thompson',
  role: 'provider',
  businessId: '7583b198-b58f-4282-a802-100375bebc91',
  email: 'provider1-1753273965360@example.com',
  phoneNormalized: undefined
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Provider 2 user profile created with ID: a6cdef7a-b0d5-4b7a-a8b2-bbbf5a75ebbf
[Onboarding] Successfully created 2 total providers
[Onboarding] Creating default services...
[Onboarding] Created service: Single item move - One person
[Onboarding] Created service: Single item move - Two people
[Onboarding] Created service: Few items move - One person
[Onboarding] Created service: Few items move - Two people
[Onboarding] Created service: House Move 1 bedroom - One person
[Onboarding] Created service: House Move 1 bedroom - Two people
[Onboarding] Created service: House Move 2+ bedroom - One person
[Onboarding] Created service: House Move 2+ bedroom - Two people
[Onboarding] Creating provider calendar settings...
[Onboarding] Creating calendar settings for provider 0: Mike Wilson (admin/provider)
[Onboarding] Provider 0 qualifies for calendar settings, proceeding...
[Onboarding] Calling CalendarSettings.save with data: {
  userId: '35051519-58a5-4e4d-a920-292bdc0ed18d',
  businessId: '7583b198-b58f-4282-a802-100375bebc91',
  workingHours: {
    mon: { start: '09:00', end: '17:00' },
    tue: { start: '09:00', end: '17:00' },
    wed: { start: '09:00', end: '17:00' },
    thu: { start: '09:00', end: '17:00' },
    fri: { start: '09:00', end: '17:00' },
    sat: null,
    sun: null
  },
  manageCalendar: false,
  settings: { bufferTime: 15, timezone: 'Australia/Brisbane' }
}
[CalendarSettings.save] Using service role client (bypasses RLS for calendar settings creation)
[Onboarding] CalendarSettings.save returned: CalendarSettings {
  data: {
    userId: '35051519-58a5-4e4d-a920-292bdc0ed18d',
    businessId: '7583b198-b58f-4282-a802-100375bebc91',
    workingHours: {
      fri: [Object],
      mon: [Object],
      sat: null,
      sun: null,
      thu: [Object],
      tue: [Object],
      wed: [Object]
    },
    timezone: undefined,
    manageCalendar: undefined,
    calendarId: null,
    calendarType: null,
    settings: { timezone: 'Australia/Brisbane', bufferTime: 15 },
    lastSync: undefined
  },
  _id: 'f11d6fe3-a994-4933-86c0-78d42900d252'
}
[Onboarding] Created calendar settings for Mike Wilson (ID: f11d6fe3-a994-4933-86c0-78d42900d252)
[Onboarding] Creating calendar settings for provider 1: Provider 2 (provider)
[Onboarding] Provider 1 qualifies for calendar settings, proceeding...
[Onboarding] Calling CalendarSettings.save with data: {
  userId: 'a6cdef7a-b0d5-4b7a-a8b2-bbbf5a75ebbf',
  businessId: '7583b198-b58f-4282-a802-100375bebc91',
  workingHours: {
    mon: { start: '09:00', end: '17:00' },
    tue: { start: '09:00', end: '17:00' },
    wed: { start: '09:00', end: '17:00' },
    thu: { start: '09:00', end: '17:00' },
    fri: { start: '09:00', end: '17:00' },
    sat: null,
    sun: null
  },
  manageCalendar: false,
  settings: { bufferTime: 15, timezone: 'Australia/Brisbane' }
}
[CalendarSettings.save] Using service role client (bypasses RLS for calendar settings creation)
[Onboarding] CalendarSettings.save returned: CalendarSettings {
  data: {
    userId: 'a6cdef7a-b0d5-4b7a-a8b2-bbbf5a75ebbf',
    businessId: '7583b198-b58f-4282-a802-100375bebc91',
    workingHours: {
      fri: [Object],
      mon: [Object],
      sat: null,
      sun: null,
      thu: [Object],
      tue: [Object],
      wed: [Object]
    },
    timezone: undefined,
    manageCalendar: undefined,
    calendarId: null,
    calendarType: null,
    settings: { timezone: 'Australia/Brisbane', bufferTime: 15 },
    lastSync: undefined
  },
  _id: 'f88e18f3-7d20-4c0e-bae5-0ca7f727f351'
}
[Onboarding] Created calendar settings for Provider 2 (ID: f88e18f3-7d20-4c0e-bae5-0ca7f727f351)
[Onboarding] Successfully created 2 calendar settings
[Onboarding] Generating initial aggregated availability...
[computeAggregatedAvailability] Found 2 providers for business 7583b198-b58f-4282-a802-100375bebc91
[Environment] Using development environment for server client
[Environment] Using development environment for server client
[Onboarding] Generated 22 days of aggregated availability
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[Onboarding] Successfully saved 22 availability slot records
[Onboarding] Multi-provider business onboarding completed successfully!
 POST /api/onboarding/create-business 200 in 2945ms
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 2 providers, owner role: admin/provider
[Onboarding] Creating owner auth user...
[Onboarding] Owner auth user created with ID: aaa43778-c951-4321-8205-3028bf452aee
[Onboarding] Creating business...
[Onboarding] Business created with ID: 6ac8bbba-8028-42a5-9775-8126ccbac80f
[Onboarding] Creating owner user profile with role: admin/provider
[User.add] Found existing auth user with email: test-onboarding@example.com
[User.add] About to upsert user profile: {
  id: 'aaa43778-c951-4321-8205-3028bf452aee',
  firstName: 'Mike',
  lastName: 'Wilson',
  role: 'admin/provider',
  businessId: '6ac8bbba-8028-42a5-9775-8126ccbac80f',
  email: 'test-onboarding@example.com',
  phoneNormalized: '61400000005',
  whatsAppNumberNormalized: '61400000006'
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Owner user profile created with ID: aaa43778-c951-4321-8205-3028bf452aee
[Onboarding] Creating provider 2: Alex Thompson
[User.add] Found existing auth user with email: provider1-1753274014276@example.com
[User.add] About to upsert user profile: {
  id: 'ceb54ef0-d606-418a-b577-07fb641cf4f7',
  firstName: 'Alex',
  lastName: 'Thompson',
  role: 'provider',
  businessId: '6ac8bbba-8028-42a5-9775-8126ccbac80f',
  email: 'provider1-1753274014276@example.com',
  phoneNormalized: undefined
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Provider 2 user profile created with ID: ceb54ef0-d606-418a-b577-07fb641cf4f7
[Onboarding] Successfully created 2 total providers
[Onboarding] Creating default services...
[Onboarding] Created service: Single item move - One person
[Onboarding] Created service: Single item move - Two people
[Onboarding] Created service: Few items move - One person
[Onboarding] Created service: Few items move - Two people
[Onboarding] Created service: House Move 1 bedroom - One person
[Onboarding] Created service: House Move 1 bedroom - Two people
[Onboarding] Created service: House Move 2+ bedroom - One person
[Onboarding] Created service: House Move 2+ bedroom - Two people
[Onboarding] Creating provider calendar settings...
[Onboarding] Creating calendar settings for provider 0: Mike Wilson (admin/provider)
[Onboarding] Provider 0 qualifies for calendar settings, proceeding...
[Onboarding] Calling CalendarSettings.save with data: {
  userId: 'aaa43778-c951-4321-8205-3028bf452aee',
  businessId: '6ac8bbba-8028-42a5-9775-8126ccbac80f',
  workingHours: {
    mon: { start: '09:00', end: '17:00' },
    tue: { start: '09:00', end: '17:00' },
    wed: { start: '09:00', end: '17:00' },
    thu: { start: '09:00', end: '17:00' },
    fri: { start: '09:00', end: '17:00' },
    sat: null,
    sun: null
  },
  manageCalendar: false,
  settings: { bufferTime: 15, timezone: 'Australia/Brisbane' }
}
[CalendarSettings.save] Using service role client (bypasses RLS for calendar settings creation)
[Onboarding] CalendarSettings.save returned: CalendarSettings {
  data: {
    userId: 'aaa43778-c951-4321-8205-3028bf452aee',
    businessId: '6ac8bbba-8028-42a5-9775-8126ccbac80f',
    workingHours: {
      fri: [Object],
      mon: [Object],
      sat: null,
      sun: null,
      thu: [Object],
      tue: [Object],
      wed: [Object]
    },
    timezone: undefined,
    manageCalendar: undefined,
    calendarId: null,
    calendarType: null,
    settings: { timezone: 'Australia/Brisbane', bufferTime: 15 },
    lastSync: undefined
  },
  _id: '709d9559-c689-45fd-962c-3f8a029190f6'
}
[Onboarding] Created calendar settings for Mike Wilson (ID: 709d9559-c689-45fd-962c-3f8a029190f6)
[Onboarding] Creating calendar settings for provider 1: Provider 2 (provider)
[Onboarding] Provider 1 qualifies for calendar settings, proceeding...
[Onboarding] Calling CalendarSettings.save with data: {
  userId: 'ceb54ef0-d606-418a-b577-07fb641cf4f7',
  businessId: '6ac8bbba-8028-42a5-9775-8126ccbac80f',
  workingHours: {
    mon: { start: '09:00', end: '17:00' },
    tue: { start: '09:00', end: '17:00' },
    wed: { start: '09:00', end: '17:00' },
    thu: { start: '09:00', end: '17:00' },
    fri: { start: '09:00', end: '17:00' },
    sat: null,
    sun: null
  },
  manageCalendar: false,
  settings: { bufferTime: 15, timezone: 'Australia/Brisbane' }
}
[CalendarSettings.save] Using service role client (bypasses RLS for calendar settings creation)
[Onboarding] CalendarSettings.save returned: CalendarSettings {
  data: {
    userId: 'ceb54ef0-d606-418a-b577-07fb641cf4f7',
    businessId: '6ac8bbba-8028-42a5-9775-8126ccbac80f',
    workingHours: {
      fri: [Object],
      mon: [Object],
      sat: null,
      sun: null,
      thu: [Object],
      tue: [Object],
      wed: [Object]
    },
    timezone: undefined,
    manageCalendar: undefined,
    calendarId: null,
    calendarType: null,
    settings: { timezone: 'Australia/Brisbane', bufferTime: 15 },
    lastSync: undefined
  },
  _id: 'b076a26b-ba1d-4e70-ad1a-40d77e65af5c'
}
[Onboarding] Created calendar settings for Provider 2 (ID: b076a26b-ba1d-4e70-ad1a-40d77e65af5c)
[Onboarding] Successfully created 2 calendar settings
[Onboarding] Generating initial aggregated availability...
[computeAggregatedAvailability] Found 2 providers for business 6ac8bbba-8028-42a5-9775-8126ccbac80f
[Environment] Using development environment for server client
[Environment] Using development environment for server client
[Onboarding] Generated 22 days of aggregated availability
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[Onboarding] Successfully saved 22 availability slot records
[Onboarding] Multi-provider business onboarding completed successfully!
 POST /api/onboarding/create-business 200 in 3158ms
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 1 providers, owner role: admin/provider
[Onboarding] Creating owner auth user...
[Onboarding] Owner auth user created with ID: b00d5f4d-35d9-403a-a1f6-2508302d8ffd
[Onboarding] Creating business...
[Onboarding] Business created with ID: 3ce16dea-28de-4ee3-a5d0-d29741dfc0ab
[Onboarding] Creating owner user profile with role: admin/provider
[User.add] Found existing auth user with email: test-onboarding@example.com
[User.add] About to upsert user profile: {
  id: 'b00d5f4d-35d9-403a-a1f6-2508302d8ffd',
  firstName: 'John',
  lastName: 'Doe',
  role: 'admin/provider',
  businessId: '3ce16dea-28de-4ee3-a5d0-d29741dfc0ab',
  email: 'test-onboarding@example.com',
  phoneNormalized: '61400000001',
  whatsAppNumberNormalized: '61400000002'
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Owner user profile created with ID: b00d5f4d-35d9-403a-a1f6-2508302d8ffd
[Onboarding] Successfully created 1 total providers
[Onboarding] Creating default services...
[Onboarding] Created service: Single item move - One person
[Onboarding] Created service: Single item move - Two people
[Onboarding] Created service: Few items move - One person
[Onboarding] Created service: Few items move - Two people
[Onboarding] Created service: House Move 1 bedroom - One person
[Onboarding] Created service: House Move 1 bedroom - Two people
[Onboarding] Created service: House Move 2+ bedroom - One person
[Onboarding] Created service: House Move 2+ bedroom - Two people
[Onboarding] Creating provider calendar settings...
[Onboarding] Creating calendar settings for provider 0: John Doe (admin/provider)
[Onboarding] Provider 0 qualifies for calendar settings, proceeding...
[Onboarding] Calling CalendarSettings.save with data: {
  userId: 'b00d5f4d-35d9-403a-a1f6-2508302d8ffd',
  businessId: '3ce16dea-28de-4ee3-a5d0-d29741dfc0ab',
  workingHours: {
    mon: { start: '09:00', end: '17:00' },
    tue: { start: '09:00', end: '17:00' },
    wed: { start: '09:00', end: '17:00' },
    thu: { start: '09:00', end: '17:00' },
    fri: { start: '09:00', end: '17:00' },
    sat: null,
    sun: null
  },
  manageCalendar: false,
  settings: { bufferTime: 15, timezone: 'Australia/Sydney' }
}
[CalendarSettings.save] Using service role client (bypasses RLS for calendar settings creation)
[Onboarding] CalendarSettings.save returned: CalendarSettings {
  data: {
    userId: 'b00d5f4d-35d9-403a-a1f6-2508302d8ffd',
    businessId: '3ce16dea-28de-4ee3-a5d0-d29741dfc0ab',
    workingHours: {
      fri: [Object],
      mon: [Object],
      sat: null,
      sun: null,
      thu: [Object],
      tue: [Object],
      wed: [Object]
    },
    timezone: undefined,
    manageCalendar: undefined,
    calendarId: null,
    calendarType: null,
    settings: { timezone: 'Australia/Sydney', bufferTime: 15 },
    lastSync: undefined
  },
  _id: 'ee6d97df-b9d4-44a6-9b1a-9158e0e40e81'
}
[Onboarding] Created calendar settings for John Doe (ID: ee6d97df-b9d4-44a6-9b1a-9158e0e40e81)
[Onboarding] Successfully created 1 calendar settings
[Onboarding] Generating initial aggregated availability...
[computeAggregatedAvailability] Found 1 providers for business 3ce16dea-28de-4ee3-a5d0-d29741dfc0ab
[Environment] Using development environment for server client
[Onboarding] Generated 22 days of aggregated availability
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[Onboarding] Successfully saved 22 availability slot records
[Onboarding] Multi-provider business onboarding completed successfully!
 POST /api/onboarding/create-business 200 in 2404ms
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 2 providers, owner role: admin
[Onboarding] Creating owner auth user...
[Onboarding] Owner auth user created with ID: 0da5816c-4bb6-40da-b169-d818fd643e38
[Onboarding] Creating business...
[Onboarding] Business created with ID: ffaf2ae6-851d-44a6-bb3c-acb598c4b48a
[Onboarding] Creating owner user profile with role: admin
[User.add] Found existing auth user with email: test-onboarding@example.com
[User.add] About to upsert user profile: {
  id: '0da5816c-4bb6-40da-b169-d818fd643e38',
  firstName: 'Jane',
  lastName: 'Smith',
  role: 'admin',
  businessId: 'ffaf2ae6-851d-44a6-bb3c-acb598c4b48a',
  email: 'test-onboarding@example.com',
  phoneNormalized: '61400000003',
  whatsAppNumberNormalized: '61400000004'
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Owner user profile created with ID: 0da5816c-4bb6-40da-b169-d818fd643e38
[Onboarding] Creating provider 2: Sarah Johnson
[User.add] Found existing auth user with email: provider1-1753274025126@example.com
[User.add] About to upsert user profile: {
  id: '2902f587-2652-466b-9b7b-bcabb9d079dd',
  firstName: 'Sarah',
  lastName: 'Johnson',
  role: 'provider',
  businessId: 'ffaf2ae6-851d-44a6-bb3c-acb598c4b48a',
  email: 'provider1-1753274025126@example.com',
  phoneNormalized: undefined
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Provider 2 user profile created with ID: 2902f587-2652-466b-9b7b-bcabb9d079dd
[Onboarding] Successfully created 2 total providers
[Onboarding] Creating default services...
[Onboarding] Created service: Basic Manicure
[Onboarding] Created service: Express Manicure
[Onboarding] Created service: Gel Manicure
[Onboarding] Created service: Press on Manicure
[Onboarding] Created service: Nail Art
[Onboarding] Created service: Basic Pedicure
[Onboarding] Created service: Gel Pedicure
[Onboarding] Created service: Ladies Haircut
[Onboarding] Created service: Hair Styling
[Onboarding] Created service: Braids
[Onboarding] Created service: Blow Dry
[Onboarding] Created service: Waves
[Onboarding] Created service: Treatments
[Onboarding] Creating provider calendar settings...
[Onboarding] Creating calendar settings for provider 0: Jane Smith (admin)
[Onboarding] Skipping calendar settings for Jane Smith - admin only (no service provision)
[Onboarding] Creating calendar settings for provider 1: Provider 2 (provider)
[Onboarding] Provider 1 qualifies for calendar settings, proceeding...
[Onboarding] Calling CalendarSettings.save with data: {
  userId: '2902f587-2652-466b-9b7b-bcabb9d079dd',
  businessId: 'ffaf2ae6-851d-44a6-bb3c-acb598c4b48a',
  workingHours: {
    mon: { start: '09:00', end: '17:00' },
    tue: { start: '09:00', end: '17:00' },
    wed: { start: '09:00', end: '17:00' },
    thu: { start: '09:00', end: '17:00' },
    fri: { start: '09:00', end: '17:00' },
    sat: null,
    sun: null
  },
  manageCalendar: false,
  settings: { bufferTime: 15, timezone: 'Australia/Melbourne' }
}
[CalendarSettings.save] Using service role client (bypasses RLS for calendar settings creation)
[Onboarding] CalendarSettings.save returned: CalendarSettings {
  data: {
    userId: '2902f587-2652-466b-9b7b-bcabb9d079dd',
    businessId: 'ffaf2ae6-851d-44a6-bb3c-acb598c4b48a',
    workingHours: {
      fri: [Object],
      mon: [Object],
      sat: null,
      sun: null,
      thu: [Object],
      tue: [Object],
      wed: [Object]
    },
    timezone: undefined,
    manageCalendar: undefined,
    calendarId: null,
    calendarType: null,
    settings: { timezone: 'Australia/Melbourne', bufferTime: 15 },
    lastSync: undefined
  },
  _id: '1b955cc2-d860-4ffc-8de2-f8c47f6e9403'
}
[Onboarding] Created calendar settings for Provider 2 (ID: 1b955cc2-d860-4ffc-8de2-f8c47f6e9403)
[Onboarding] Successfully created 1 calendar settings
[Onboarding] Generating initial aggregated availability...
[computeAggregatedAvailability] Found 1 providers for business ffaf2ae6-851d-44a6-bb3c-acb598c4b48a
[Environment] Using development environment for server client
[Onboarding] Generated 22 days of aggregated availability
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[Onboarding] Successfully saved 22 availability slot records
[Onboarding] Multi-provider business onboarding completed successfully!
 POST /api/onboarding/create-business 200 in 2845ms
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 2 providers, owner role: admin/provider
[Onboarding] Creating owner auth user...
[Onboarding] Owner auth user created with ID: f2b9f595-88b2-40f8-93ee-7d6e01b3a7ac
[Onboarding] Creating business...
[Onboarding] Business created with ID: e6ad9ae8-70d7-4d98-b0f7-26927e9a8a15
[Onboarding] Creating owner user profile with role: admin/provider
[User.add] Found existing auth user with email: test-onboarding@example.com
[User.add] About to upsert user profile: {
  id: 'f2b9f595-88b2-40f8-93ee-7d6e01b3a7ac',
  firstName: 'Mike',
  lastName: 'Wilson',
  role: 'admin/provider',
  businessId: 'e6ad9ae8-70d7-4d98-b0f7-26927e9a8a15',
  email: 'test-onboarding@example.com',
  phoneNormalized: '61400000005',
  whatsAppNumberNormalized: '61400000006'
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Owner user profile created with ID: f2b9f595-88b2-40f8-93ee-7d6e01b3a7ac
[Onboarding] Creating provider 2: Alex Thompson
[User.add] Found existing auth user with email: provider1-1753274029113@example.com
[User.add] About to upsert user profile: {
  id: '5b857d14-424f-4911-a21d-f7cff6316682',
  firstName: 'Alex',
  lastName: 'Thompson',
  role: 'provider',
  businessId: 'e6ad9ae8-70d7-4d98-b0f7-26927e9a8a15',
  email: 'provider1-1753274029113@example.com',
  phoneNormalized: undefined
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Provider 2 user profile created with ID: 5b857d14-424f-4911-a21d-f7cff6316682
[Onboarding] Successfully created 2 total providers
[Onboarding] Creating default services...
[Onboarding] Created service: Single item move - One person
[Onboarding] Created service: Single item move - Two people
[Onboarding] Created service: Few items move - One person
[Onboarding] Created service: Few items move - Two people
[Onboarding] Created service: House Move 1 bedroom - One person
[Onboarding] Created service: House Move 1 bedroom - Two people
[Onboarding] Created service: House Move 2+ bedroom - One person
[Onboarding] Created service: House Move 2+ bedroom - Two people
[Onboarding] Creating provider calendar settings...
[Onboarding] Creating calendar settings for provider 0: Mike Wilson (admin/provider)
[Onboarding] Provider 0 qualifies for calendar settings, proceeding...
[Onboarding] Calling CalendarSettings.save with data: {
  userId: 'f2b9f595-88b2-40f8-93ee-7d6e01b3a7ac',
  businessId: 'e6ad9ae8-70d7-4d98-b0f7-26927e9a8a15',
  workingHours: {
    mon: { start: '09:00', end: '17:00' },
    tue: { start: '09:00', end: '17:00' },
    wed: { start: '09:00', end: '17:00' },
    thu: { start: '09:00', end: '17:00' },
    fri: { start: '09:00', end: '17:00' },
    sat: null,
    sun: null
  },
  manageCalendar: false,
  settings: { bufferTime: 15, timezone: 'Australia/Brisbane' }
}
[CalendarSettings.save] Using service role client (bypasses RLS for calendar settings creation)
[Onboarding] CalendarSettings.save returned: CalendarSettings {
  data: {
    userId: 'f2b9f595-88b2-40f8-93ee-7d6e01b3a7ac',
    businessId: 'e6ad9ae8-70d7-4d98-b0f7-26927e9a8a15',
    workingHours: {
      fri: [Object],
      mon: [Object],
      sat: null,
      sun: null,
      thu: [Object],
      tue: [Object],
      wed: [Object]
    },
    timezone: undefined,
    manageCalendar: undefined,
    calendarId: null,
    calendarType: null,
    settings: { timezone: 'Australia/Brisbane', bufferTime: 15 },
    lastSync: undefined
  },
  _id: 'f6ad9d06-c120-49b4-aab4-86b68934150a'
}
[Onboarding] Created calendar settings for Mike Wilson (ID: f6ad9d06-c120-49b4-aab4-86b68934150a)
[Onboarding] Creating calendar settings for provider 1: Provider 2 (provider)
[Onboarding] Provider 1 qualifies for calendar settings, proceeding...
[Onboarding] Calling CalendarSettings.save with data: {
  userId: '5b857d14-424f-4911-a21d-f7cff6316682',
  businessId: 'e6ad9ae8-70d7-4d98-b0f7-26927e9a8a15',
  workingHours: {
    mon: { start: '09:00', end: '17:00' },
    tue: { start: '09:00', end: '17:00' },
    wed: { start: '09:00', end: '17:00' },
    thu: { start: '09:00', end: '17:00' },
    fri: { start: '09:00', end: '17:00' },
    sat: null,
    sun: null
  },
  manageCalendar: false,
  settings: { bufferTime: 15, timezone: 'Australia/Brisbane' }
}
[CalendarSettings.save] Using service role client (bypasses RLS for calendar settings creation)
[Onboarding] CalendarSettings.save returned: CalendarSettings {
  data: {
    userId: '5b857d14-424f-4911-a21d-f7cff6316682',
    businessId: 'e6ad9ae8-70d7-4d98-b0f7-26927e9a8a15',
    workingHours: {
      fri: [Object],
      mon: [Object],
      sat: null,
      sun: null,
      thu: [Object],
      tue: [Object],
      wed: [Object]
    },
    timezone: undefined,
    manageCalendar: undefined,
    calendarId: null,
    calendarType: null,
    settings: { timezone: 'Australia/Brisbane', bufferTime: 15 },
    lastSync: undefined
  },
  _id: 'b347cffa-0458-49ce-b67f-14650c4b17f3'
}
[Onboarding] Created calendar settings for Provider 2 (ID: b347cffa-0458-49ce-b67f-14650c4b17f3)
[Onboarding] Successfully created 2 calendar settings
[Onboarding] Generating initial aggregated availability...
[computeAggregatedAvailability] Found 2 providers for business e6ad9ae8-70d7-4d98-b0f7-26927e9a8a15
[Environment] Using development environment for server client
[Environment] Using development environment for server client
[Onboarding] Generated 22 days of aggregated availability
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[Onboarding] Successfully saved 22 availability slot records
[Onboarding] Multi-provider business onboarding completed successfully!
 POST /api/onboarding/create-business 200 in 2764ms
[Environment] Using development environment for service-role client
 POST /api/onboarding/create-business 400 in 8ms
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 1 providers, owner role: admin/provider
[Onboarding] Creating owner auth user...
[Onboarding] Owner auth user created with ID: 5905509e-c723-460e-bbc2-bec9a26fb178
[Onboarding] Creating business...
[Onboarding] Business created with ID: 84c5bcee-ab02-4193-bb2b-77fcbdc40036
[Onboarding] Creating owner user profile with role: admin/provider
[User.add] Found existing auth user with email: test-onboarding@example.com
[User.add] About to upsert user profile: {
  id: '5905509e-c723-460e-bbc2-bec9a26fb178',
  firstName: 'John',
  lastName: 'Doe',
  role: 'admin/provider',
  businessId: '84c5bcee-ab02-4193-bb2b-77fcbdc40036',
  email: 'test-onboarding@example.com',
  phoneNormalized: '61400000005',
  whatsAppNumberNormalized: '61400000006'
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Owner user profile created with ID: 5905509e-c723-460e-bbc2-bec9a26fb178
[Onboarding] Successfully created 1 total providers
[Onboarding] Creating default services...
[Onboarding] Created service: Single item move - One person
[Onboarding] Created service: Single item move - Two people
[Onboarding] Created service: Few items move - One person
[Onboarding] Created service: Few items move - Two people
[Onboarding] Created service: House Move 1 bedroom - One person
[Onboarding] Created service: House Move 1 bedroom - Two people
[Onboarding] Created service: House Move 2+ bedroom - One person
[Onboarding] Created service: House Move 2+ bedroom - Two people
[Onboarding] Creating provider calendar settings...
[Onboarding] Creating calendar settings for provider 0: John Doe (admin/provider)
[Onboarding] Provider 0 qualifies for calendar settings, proceeding...
[Onboarding] Calling CalendarSettings.save with data: {
  userId: '5905509e-c723-460e-bbc2-bec9a26fb178',
  businessId: '84c5bcee-ab02-4193-bb2b-77fcbdc40036',
  workingHours: {
    mon: { start: '09:00', end: '17:00' },
    tue: { start: '09:00', end: '17:00' },
    wed: { start: '09:00', end: '17:00' },
    thu: { start: '09:00', end: '17:00' },
    fri: { start: '09:00', end: '17:00' },
    sat: null,
    sun: null
  },
  manageCalendar: false,
  settings: { bufferTime: 15, timezone: 'Australia/Sydney' }
}
[CalendarSettings.save] Using service role client (bypasses RLS for calendar settings creation)
[Onboarding] CalendarSettings.save returned: CalendarSettings {
  data: {
    userId: '5905509e-c723-460e-bbc2-bec9a26fb178',
    businessId: '84c5bcee-ab02-4193-bb2b-77fcbdc40036',
    workingHours: {
      fri: [Object],
      mon: [Object],
      sat: null,
      sun: null,
      thu: [Object],
      tue: [Object],
      wed: [Object]
    },
    timezone: undefined,
    manageCalendar: undefined,
    calendarId: null,
    calendarType: null,
    settings: { timezone: 'Australia/Sydney', bufferTime: 15 },
    lastSync: undefined
  },
  _id: '894252a7-0e10-4539-8cc2-88c43ea8007f'
}
[Onboarding] Created calendar settings for John Doe (ID: 894252a7-0e10-4539-8cc2-88c43ea8007f)
[Onboarding] Successfully created 1 calendar settings
[Onboarding] Generating initial aggregated availability...
[computeAggregatedAvailability] Found 1 providers for business 84c5bcee-ab02-4193-bb2b-77fcbdc40036
[Environment] Using development environment for server client
[Onboarding] Generated 22 days of aggregated availability
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[Onboarding] Successfully saved 22 availability slot records
[Onboarding] Multi-provider business onboarding completed successfully!
 POST /api/onboarding/create-business 200 in 2487ms
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 1 providers, owner role: admin/provider
[Onboarding] Creating owner auth user...
[Onboarding] Auth user creation failed: Error [AuthApiError]: A user with this email address has already been registered
    at async POST (app/api/onboarding/create-business/route.ts:56:49)
  54 |     // --- Step 1: Create Auth User for Owner ---
  55 |     console.log('[Onboarding] Creating owner auth user...');
> 56 |     const { data: authData, error: authError } = await adminSupa.auth.admin.createUser({
     |                                                 ^
  57 |       email: onboardingData.email,
  58 |       password: onboardingData.password,
  59 |       email_confirm: true, {
  __isAuthError: true,
  status: 422,
  code: 'email_exists'
}
 POST /api/onboarding/create-business 400 in 118ms
[Environment] Using development environment for service-role client
[Onboarding] Creating business with 1 providers, owner role: admin/provider
[Onboarding] Creating owner auth user...
[Onboarding] Owner auth user created with ID: f579c6d7-44b8-40ad-b2f3-b15fe6318082
[Onboarding] Creating business...
[Onboarding] Business created with ID: 30bae9a8-58b5-411f-9e1b-7ea97682257b
[Onboarding] Creating owner user profile with role: admin/provider
[User.add] Found existing auth user with email: test-onboarding@example.com
[User.add] About to upsert user profile: {
  id: 'f579c6d7-44b8-40ad-b2f3-b15fe6318082',
  firstName: 'John',
  lastName: 'Doe',
  role: 'admin/provider',
  businessId: '30bae9a8-58b5-411f-9e1b-7ea97682257b',
  email: 'test-onboarding@example.com',
  phoneNormalized: '61400000009',
  whatsAppNumberNormalized: '61400000010'
}
[User.add] Using adminSupa client (bypasses RLS for user creation)
[Onboarding] Owner user profile created with ID: f579c6d7-44b8-40ad-b2f3-b15fe6318082
[Onboarding] Successfully created 1 total providers
[Onboarding] Creating default services...
[Onboarding] Created service: Single item move - One person
[Onboarding] Created service: Single item move - Two people
[Onboarding] Created service: Few items move - One person
[Onboarding] Created service: Few items move - Two people
[Onboarding] Created service: House Move 1 bedroom - One person
[Onboarding] Created service: House Move 1 bedroom - Two people
[Onboarding] Created service: House Move 2+ bedroom - One person
[Onboarding] Created service: House Move 2+ bedroom - Two people
[Onboarding] Creating provider calendar settings...
[Onboarding] Creating calendar settings for provider 0: John Doe (admin/provider)
[Onboarding] Provider 0 qualifies for calendar settings, proceeding...
[Onboarding] Calling CalendarSettings.save with data: {
  userId: 'f579c6d7-44b8-40ad-b2f3-b15fe6318082',
  businessId: '30bae9a8-58b5-411f-9e1b-7ea97682257b',
  workingHours: {
    mon: { start: '09:00', end: '17:00' },
    tue: { start: '09:00', end: '17:00' },
    wed: { start: '09:00', end: '17:00' },
    thu: { start: '09:00', end: '17:00' },
    fri: { start: '09:00', end: '17:00' },
    sat: null,
    sun: null
  },
  manageCalendar: false,
  settings: { bufferTime: 15, timezone: 'Australia/Sydney' }
}
[CalendarSettings.save] Using service role client (bypasses RLS for calendar settings creation)
[Onboarding] CalendarSettings.save returned: CalendarSettings {
  data: {
    userId: 'f579c6d7-44b8-40ad-b2f3-b15fe6318082',
    businessId: '30bae9a8-58b5-411f-9e1b-7ea97682257b',
    workingHours: {
      fri: [Object],
      mon: [Object],
      sat: null,
      sun: null,
      thu: [Object],
      tue: [Object],
      wed: [Object]
    },
    timezone: undefined,
    manageCalendar: undefined,
    calendarId: null,
    calendarType: null,
    settings: { timezone: 'Australia/Sydney', bufferTime: 15 },
    lastSync: undefined
  },
  _id: '1028d77c-4f76-4bb8-b91e-664791548acf'
}
[Onboarding] Created calendar settings for John Doe (ID: 1028d77c-4f76-4bb8-b91e-664791548acf)
[Onboarding] Successfully created 1 calendar settings
[Onboarding] Generating initial aggregated availability...
[computeAggregatedAvailability] Found 1 providers for business 30bae9a8-58b5-411f-9e1b-7ea97682257b
[Environment] Using development environment for server client
[Onboarding] Generated 22 days of aggregated availability
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[AvailabilitySlots.add] Using service role client (bypasses RLS for business availability creation)
[Onboarding] Successfully saved 22 availability slot records
[Onboarding] Creating Stripe Connect account...
[Environment] Using development environment for server client
[Environment] Using development environment for service-role client
[Onboarding] Stripe account created: acct_1Ro1rvP5SWphCzAj
[Onboarding] Multi-provider business onboarding completed successfully!
 POST /api/onboarding/create-business 200 in 5392ms
 ✓ Compiled in 404ms (1097 modules)
 ✓ Compiled in 315ms (54 modules)
 ✓ Compiled in 388ms (1137 modules)
<w> [webpack.cache.PackFileCacheStrategy] Caching failed for pack: Error: ENOENT: no such file or directory, rename '/Users/juanbernal/code/mesieou/2025/simple_booking/.next/cache/webpack/client-development/12.pack.gz_' -> '/Users/juanbernal/code/mesieou/2025/simple_booking/.next/cache/webpack/client-development/12.pack.gz'
 ✓ Compiled in 193ms (1137 modules)
